
test_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f8a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000ffe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800060  00800060  00000ffe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ffe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001030  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b1a  00000000  00000000  000011ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a2  00000000  00000000  00002d06  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fb0  00000000  00000000  000036a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  00004658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c4b  00000000  00000000  00004cec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012ed  00000000  00000000  00005937  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00006c24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   8:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  10:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__vector_4>
  14:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__vector_5>
  18:	0c 94 33 07 	jmp	0xe66	; 0xe66 <__vector_6>
  1c:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__vector_7>
  20:	0c 94 0a 07 	jmp	0xe14	; 0xe14 <__vector_8>
  24:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__vector_9>
  28:	0c 94 8f 06 	jmp	0xd1e	; 0xd1e <__vector_10>
  2c:	0c 94 66 06 	jmp	0xccc	; 0xccc <__vector_11>
  30:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  34:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  38:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  3c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  40:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  44:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  48:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  4c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  50:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  54:	ff 04       	cpc	r15, r15
  56:	0c 05       	cpc	r16, r12
  58:	19 05       	cpc	r17, r9
  5a:	26 05       	cpc	r18, r6
  5c:	33 05       	cpc	r19, r3
  5e:	40 05       	cpc	r20, r0
  60:	4d 05       	cpc	r20, r13
  62:	5a 05       	cpc	r21, r10
  64:	67 05       	cpc	r22, r7
  66:	74 05       	cpc	r23, r4
  68:	81 05       	cpc	r24, r1
  6a:	8e 05       	cpc	r24, r14
  6c:	9b 05       	cpc	r25, r11
  6e:	c2 05       	cpc	r28, r2
  70:	a8 05       	cpc	r26, r8
  72:	b5 05       	cpc	r27, r5

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf e5       	ldi	r28, 0x5F	; 95
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_clear_bss>:
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	a0 e6       	ldi	r26, 0x60	; 96
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	01 c0       	rjmp	.+2      	; 0x8a <.do_clear_bss_start>

00000088 <.do_clear_bss_loop>:
  88:	1d 92       	st	X+, r1

0000008a <.do_clear_bss_start>:
  8a:	a0 37       	cpi	r26, 0x70	; 112
  8c:	b2 07       	cpc	r27, r18
  8e:	e1 f7       	brne	.-8      	; 0x88 <.do_clear_bss_loop>
  90:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <main>
  94:	0c 94 c3 07 	jmp	0xf86	; 0xf86 <_exit>

00000098 <__bad_interrupt>:
  98:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009c <CAR_WHEELS_init_motors>:
				DC_MOTOR_set_duty(left_wheel,SPEED);
				DC_MOTOR_set_direction(right_wheel,backward);
				DC_MOTOR_set_direction(left_wheel,backward);

		
}
  9c:	7f 92       	push	r7
  9e:	8f 92       	push	r8
  a0:	9f 92       	push	r9
  a2:	af 92       	push	r10
  a4:	bf 92       	push	r11
  a6:	cf 92       	push	r12
  a8:	df 92       	push	r13
  aa:	ef 92       	push	r14
  ac:	ff 92       	push	r15
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	ec 01       	movw	r28, r24
  b8:	6b 01       	movw	r12, r22
  ba:	68 94       	set
  bc:	aa 24       	eor	r10, r10
  be:	a2 f8       	bld	r10, 2
  c0:	db 01       	movw	r26, r22
  c2:	14 96       	adiw	r26, 0x04	; 4
  c4:	ac 92       	st	X, r10
  c6:	14 97       	sbiw	r26, 0x04	; 4
  c8:	15 96       	adiw	r26, 0x05	; 5
  ca:	ac 92       	st	X, r10
  cc:	15 97       	sbiw	r26, 0x05	; 5
  ce:	0f 2e       	mov	r0, r31
  d0:	f3 e0       	ldi	r31, 0x03	; 3
  d2:	ff 2e       	mov	r15, r31
  d4:	f0 2d       	mov	r31, r0
  d6:	fc 92       	st	X, r15
  d8:	82 e0       	ldi	r24, 0x02	; 2
  da:	11 96       	adiw	r26, 0x01	; 1
  dc:	8c 93       	st	X, r24
  de:	11 97       	sbiw	r26, 0x01	; 1
  e0:	12 96       	adiw	r26, 0x02	; 2
  e2:	fc 92       	st	X, r15
  e4:	12 97       	sbiw	r26, 0x02	; 2
  e6:	13 96       	adiw	r26, 0x03	; 3
  e8:	fc 92       	st	X, r15
  ea:	13 97       	sbiw	r26, 0x03	; 3
  ec:	0f 2e       	mov	r0, r31
  ee:	f6 e4       	ldi	r31, 0x46	; 70
  f0:	bf 2e       	mov	r11, r31
  f2:	f0 2d       	mov	r31, r0
  f4:	71 2c       	mov	r7, r1
  f6:	6b 2d       	mov	r22, r11
  f8:	16 96       	adiw	r26, 0x06	; 6
  fa:	bc 92       	st	X, r11
  fc:	16 97       	sbiw	r26, 0x06	; 6
  fe:	17 96       	adiw	r26, 0x07	; 7
 100:	7c 92       	st	X, r7
 102:	17 97       	sbiw	r26, 0x07	; 7
 104:	88 e4       	ldi	r24, 0x48	; 72
 106:	18 96       	adiw	r26, 0x08	; 8
 108:	8c 93       	st	X, r24
 10a:	18 97       	sbiw	r26, 0x08	; 8
 10c:	19 96       	adiw	r26, 0x09	; 9
 10e:	1c 92       	st	X, r1
 110:	03 e0       	ldi	r16, 0x03	; 3
 112:	12 e0       	ldi	r17, 0x02	; 2
 114:	23 e0       	ldi	r18, 0x03	; 3
 116:	33 e0       	ldi	r19, 0x03	; 3
 118:	44 e0       	ldi	r20, 0x04	; 4
 11a:	54 e0       	ldi	r21, 0x04	; 4
 11c:	70 e0       	ldi	r23, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 0d 02 	call	0x41a	; 0x41a <DC_MOTOR_init>
 124:	d6 01       	movw	r26, r12
 126:	16 96       	adiw	r26, 0x06	; 6
 128:	ed 91       	ld	r30, X+
 12a:	fc 91       	ld	r31, X
 12c:	17 97       	sbiw	r26, 0x07	; 7
 12e:	0f 2e       	mov	r0, r31
 130:	f1 e7       	ldi	r31, 0x71	; 113
 132:	8f 2e       	mov	r8, r31
 134:	f2 e0       	ldi	r31, 0x02	; 2
 136:	9f 2e       	mov	r9, r31
 138:	f0 2d       	mov	r31, r0
 13a:	91 82       	std	Z+1, r9	; 0x01
 13c:	80 82       	st	Z, r8
 13e:	0f 2e       	mov	r0, r31
 140:	f2 e3       	ldi	r31, 0x32	; 50
 142:	ef 2e       	mov	r14, r31
 144:	f0 2d       	mov	r31, r0
 146:	0c 91       	ld	r16, X
 148:	11 96       	adiw	r26, 0x01	; 1
 14a:	1c 91       	ld	r17, X
 14c:	11 97       	sbiw	r26, 0x01	; 1
 14e:	12 96       	adiw	r26, 0x02	; 2
 150:	2c 91       	ld	r18, X
 152:	12 97       	sbiw	r26, 0x02	; 2
 154:	13 96       	adiw	r26, 0x03	; 3
 156:	3c 91       	ld	r19, X
 158:	13 97       	sbiw	r26, 0x03	; 3
 15a:	14 96       	adiw	r26, 0x04	; 4
 15c:	4c 91       	ld	r20, X
 15e:	14 97       	sbiw	r26, 0x04	; 4
 160:	15 96       	adiw	r26, 0x05	; 5
 162:	5c 91       	ld	r21, X
 164:	15 97       	sbiw	r26, 0x05	; 5
 166:	16 96       	adiw	r26, 0x06	; 6
 168:	6c 91       	ld	r22, X
 16a:	16 97       	sbiw	r26, 0x06	; 6
 16c:	17 96       	adiw	r26, 0x07	; 7
 16e:	7c 91       	ld	r23, X
 170:	17 97       	sbiw	r26, 0x07	; 7
 172:	18 96       	adiw	r26, 0x08	; 8
 174:	8c 91       	ld	r24, X
 176:	18 97       	sbiw	r26, 0x08	; 8
 178:	19 96       	adiw	r26, 0x09	; 9
 17a:	9c 91       	ld	r25, X
 17c:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
 180:	ac 82       	std	Y+4, r10	; 0x04
 182:	85 e0       	ldi	r24, 0x05	; 5
 184:	8d 83       	std	Y+5, r24	; 0x05
 186:	f8 82       	st	Y, r15
 188:	19 82       	std	Y+1, r1	; 0x01
 18a:	fa 82       	std	Y+2, r15	; 0x02
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	8b 83       	std	Y+3, r24	; 0x03
 190:	6b 2d       	mov	r22, r11
 192:	be 82       	std	Y+6, r11	; 0x06
 194:	7f 82       	std	Y+7, r7	; 0x07
 196:	8a e4       	ldi	r24, 0x4A	; 74
 198:	88 87       	std	Y+8, r24	; 0x08
 19a:	19 86       	std	Y+9, r1	; 0x09
 19c:	03 e0       	ldi	r16, 0x03	; 3
 19e:	10 e0       	ldi	r17, 0x00	; 0
 1a0:	23 e0       	ldi	r18, 0x03	; 3
 1a2:	31 e0       	ldi	r19, 0x01	; 1
 1a4:	44 e0       	ldi	r20, 0x04	; 4
 1a6:	55 e0       	ldi	r21, 0x05	; 5
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 0d 02 	call	0x41a	; 0x41a <DC_MOTOR_init>
 1b0:	ee 81       	ldd	r30, Y+6	; 0x06
 1b2:	ff 81       	ldd	r31, Y+7	; 0x07
 1b4:	91 82       	std	Z+1, r9	; 0x01
 1b6:	80 82       	st	Z, r8
 1b8:	08 81       	ld	r16, Y
 1ba:	19 81       	ldd	r17, Y+1	; 0x01
 1bc:	2a 81       	ldd	r18, Y+2	; 0x02
 1be:	3b 81       	ldd	r19, Y+3	; 0x03
 1c0:	4c 81       	ldd	r20, Y+4	; 0x04
 1c2:	5d 81       	ldd	r21, Y+5	; 0x05
 1c4:	6e 81       	ldd	r22, Y+6	; 0x06
 1c6:	7f 81       	ldd	r23, Y+7	; 0x07
 1c8:	88 85       	ldd	r24, Y+8	; 0x08
 1ca:	99 85       	ldd	r25, Y+9	; 0x09
 1cc:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	1f 91       	pop	r17
 1d6:	0f 91       	pop	r16
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	df 90       	pop	r13
 1de:	cf 90       	pop	r12
 1e0:	bf 90       	pop	r11
 1e2:	af 90       	pop	r10
 1e4:	9f 90       	pop	r9
 1e6:	8f 90       	pop	r8
 1e8:	7f 90       	pop	r7
 1ea:	08 95       	ret

000001ec <CAR_WHEELS_move_forward>:
 1ec:	bf 92       	push	r11
 1ee:	cf 92       	push	r12
 1f0:	df 92       	push	r13
 1f2:	ef 92       	push	r14
 1f4:	ff 92       	push	r15
 1f6:	0f 93       	push	r16
 1f8:	1f 93       	push	r17
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62
 202:	2a 97       	sbiw	r28, 0x0a	; 10
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	de bf       	out	0x3e, r29	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	cd bf       	out	0x3d, r28	; 61
 20e:	09 83       	std	Y+1, r16	; 0x01
 210:	1a 83       	std	Y+2, r17	; 0x02
 212:	2b 83       	std	Y+3, r18	; 0x03
 214:	3c 83       	std	Y+4, r19	; 0x04
 216:	4d 83       	std	Y+5, r20	; 0x05
 218:	5e 83       	std	Y+6, r21	; 0x06
 21a:	6f 83       	std	Y+7, r22	; 0x07
 21c:	78 87       	std	Y+8, r23	; 0x08
 21e:	89 87       	std	Y+9, r24	; 0x09
 220:	9a 87       	std	Y+10, r25	; 0x0a
 222:	0f 2e       	mov	r0, r31
 224:	f2 e3       	ldi	r31, 0x32	; 50
 226:	ef 2e       	mov	r14, r31
 228:	f0 2d       	mov	r31, r0
 22a:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
 22e:	0e 89       	ldd	r16, Y+22	; 0x16
 230:	1f 89       	ldd	r17, Y+23	; 0x17
 232:	28 8d       	ldd	r18, Y+24	; 0x18
 234:	39 8d       	ldd	r19, Y+25	; 0x19
 236:	4a 8d       	ldd	r20, Y+26	; 0x1a
 238:	5b 8d       	ldd	r21, Y+27	; 0x1b
 23a:	6c 8d       	ldd	r22, Y+28	; 0x1c
 23c:	7d 8d       	ldd	r23, Y+29	; 0x1d
 23e:	8e 8d       	ldd	r24, Y+30	; 0x1e
 240:	9f 8d       	ldd	r25, Y+31	; 0x1f
 242:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
 246:	ee 24       	eor	r14, r14
 248:	e3 94       	inc	r14
 24a:	09 81       	ldd	r16, Y+1	; 0x01
 24c:	1a 81       	ldd	r17, Y+2	; 0x02
 24e:	2b 81       	ldd	r18, Y+3	; 0x03
 250:	3c 81       	ldd	r19, Y+4	; 0x04
 252:	4d 81       	ldd	r20, Y+5	; 0x05
 254:	5e 81       	ldd	r21, Y+6	; 0x06
 256:	6f 81       	ldd	r22, Y+7	; 0x07
 258:	78 85       	ldd	r23, Y+8	; 0x08
 25a:	89 85       	ldd	r24, Y+9	; 0x09
 25c:	9a 85       	ldd	r25, Y+10	; 0x0a
 25e:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
 262:	0e 89       	ldd	r16, Y+22	; 0x16
 264:	1f 89       	ldd	r17, Y+23	; 0x17
 266:	28 8d       	ldd	r18, Y+24	; 0x18
 268:	39 8d       	ldd	r19, Y+25	; 0x19
 26a:	4a 8d       	ldd	r20, Y+26	; 0x1a
 26c:	5b 8d       	ldd	r21, Y+27	; 0x1b
 26e:	6c 8d       	ldd	r22, Y+28	; 0x1c
 270:	7d 8d       	ldd	r23, Y+29	; 0x1d
 272:	8e 8d       	ldd	r24, Y+30	; 0x1e
 274:	9f 8d       	ldd	r25, Y+31	; 0x1f
 276:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
 27a:	2a 96       	adiw	r28, 0x0a	; 10
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	de bf       	out	0x3e, r29	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	cd bf       	out	0x3d, r28	; 61
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	ff 90       	pop	r15
 290:	ef 90       	pop	r14
 292:	df 90       	pop	r13
 294:	cf 90       	pop	r12
 296:	bf 90       	pop	r11
 298:	08 95       	ret

0000029a <CAR_WHEELS_turn_right>:

void CAR_WHEELS_turn_right(DC_MOTOR_t right_wheel, DC_MOTOR_t left_wheel){
 29a:	bf 92       	push	r11
 29c:	cf 92       	push	r12
 29e:	df 92       	push	r13
 2a0:	ef 92       	push	r14
 2a2:	ff 92       	push	r15
 2a4:	0f 93       	push	r16
 2a6:	1f 93       	push	r17
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
 2ac:	cd b7       	in	r28, 0x3d	; 61
 2ae:	de b7       	in	r29, 0x3e	; 62
 2b0:	2a 97       	sbiw	r28, 0x0a	; 10
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	f8 94       	cli
 2b6:	de bf       	out	0x3e, r29	; 62
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	cd bf       	out	0x3d, r28	; 61
 2bc:	09 83       	std	Y+1, r16	; 0x01
 2be:	1a 83       	std	Y+2, r17	; 0x02
 2c0:	2b 83       	std	Y+3, r18	; 0x03
 2c2:	3c 83       	std	Y+4, r19	; 0x04
 2c4:	4d 83       	std	Y+5, r20	; 0x05
 2c6:	5e 83       	std	Y+6, r21	; 0x06
 2c8:	6f 83       	std	Y+7, r22	; 0x07
 2ca:	78 87       	std	Y+8, r23	; 0x08
 2cc:	89 87       	std	Y+9, r24	; 0x09
 2ce:	9a 87       	std	Y+10, r25	; 0x0a
			
				DC_MOTOR_set_duty(right_wheel,100); //application req : in order to make the car turn faster
 2d0:	0f 2e       	mov	r0, r31
 2d2:	f4 e6       	ldi	r31, 0x64	; 100
 2d4:	ef 2e       	mov	r14, r31
 2d6:	f0 2d       	mov	r31, r0
 2d8:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
				DC_MOTOR_set_direction(right_wheel,forward);
 2dc:	ee 24       	eor	r14, r14
 2de:	e3 94       	inc	r14
 2e0:	09 81       	ldd	r16, Y+1	; 0x01
 2e2:	1a 81       	ldd	r17, Y+2	; 0x02
 2e4:	2b 81       	ldd	r18, Y+3	; 0x03
 2e6:	3c 81       	ldd	r19, Y+4	; 0x04
 2e8:	4d 81       	ldd	r20, Y+5	; 0x05
 2ea:	5e 81       	ldd	r21, Y+6	; 0x06
 2ec:	6f 81       	ldd	r22, Y+7	; 0x07
 2ee:	78 85       	ldd	r23, Y+8	; 0x08
 2f0:	89 85       	ldd	r24, Y+9	; 0x09
 2f2:	9a 85       	ldd	r25, Y+10	; 0x0a
 2f4:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
				DC_MOTOR_set_direction(left_wheel,off);
 2f8:	e1 2c       	mov	r14, r1
 2fa:	0e 89       	ldd	r16, Y+22	; 0x16
 2fc:	1f 89       	ldd	r17, Y+23	; 0x17
 2fe:	28 8d       	ldd	r18, Y+24	; 0x18
 300:	39 8d       	ldd	r19, Y+25	; 0x19
 302:	4a 8d       	ldd	r20, Y+26	; 0x1a
 304:	5b 8d       	ldd	r21, Y+27	; 0x1b
 306:	6c 8d       	ldd	r22, Y+28	; 0x1c
 308:	7d 8d       	ldd	r23, Y+29	; 0x1d
 30a:	8e 8d       	ldd	r24, Y+30	; 0x1e
 30c:	9f 8d       	ldd	r25, Y+31	; 0x1f
 30e:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
}
 312:	2a 96       	adiw	r28, 0x0a	; 10
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	ff 90       	pop	r15
 328:	ef 90       	pop	r14
 32a:	df 90       	pop	r13
 32c:	cf 90       	pop	r12
 32e:	bf 90       	pop	r11
 330:	08 95       	ret

00000332 <CAR_WHEELS_turn_left>:


void CAR_WHEELS_turn_left(DC_MOTOR_t right_wheel, DC_MOTOR_t left_wheel){
 332:	bf 92       	push	r11
 334:	cf 92       	push	r12
 336:	df 92       	push	r13
 338:	ef 92       	push	r14
 33a:	ff 92       	push	r15
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	2a 97       	sbiw	r28, 0x0a	; 10
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
 354:	09 83       	std	Y+1, r16	; 0x01
 356:	1a 83       	std	Y+2, r17	; 0x02
 358:	2b 83       	std	Y+3, r18	; 0x03
 35a:	3c 83       	std	Y+4, r19	; 0x04
 35c:	4d 83       	std	Y+5, r20	; 0x05
 35e:	5e 83       	std	Y+6, r21	; 0x06
 360:	6f 83       	std	Y+7, r22	; 0x07
 362:	78 87       	std	Y+8, r23	; 0x08
 364:	89 87       	std	Y+9, r24	; 0x09
 366:	9a 87       	std	Y+10, r25	; 0x0a

			DC_MOTOR_set_duty(right_wheel,100);  //application req :  in order to make the car turn faster
 368:	0f 2e       	mov	r0, r31
 36a:	f4 e6       	ldi	r31, 0x64	; 100
 36c:	ef 2e       	mov	r14, r31
 36e:	f0 2d       	mov	r31, r0
 370:	0e 94 37 02 	call	0x46e	; 0x46e <DC_MOTOR_set_duty>
			DC_MOTOR_set_direction(right_wheel,off);
 374:	e1 2c       	mov	r14, r1
 376:	09 81       	ldd	r16, Y+1	; 0x01
 378:	1a 81       	ldd	r17, Y+2	; 0x02
 37a:	2b 81       	ldd	r18, Y+3	; 0x03
 37c:	3c 81       	ldd	r19, Y+4	; 0x04
 37e:	4d 81       	ldd	r20, Y+5	; 0x05
 380:	5e 81       	ldd	r21, Y+6	; 0x06
 382:	6f 81       	ldd	r22, Y+7	; 0x07
 384:	78 85       	ldd	r23, Y+8	; 0x08
 386:	89 85       	ldd	r24, Y+9	; 0x09
 388:	9a 85       	ldd	r25, Y+10	; 0x0a
 38a:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
			DC_MOTOR_set_direction(left_wheel,forward);
 38e:	ee 24       	eor	r14, r14
 390:	e3 94       	inc	r14
 392:	0e 89       	ldd	r16, Y+22	; 0x16
 394:	1f 89       	ldd	r17, Y+23	; 0x17
 396:	28 8d       	ldd	r18, Y+24	; 0x18
 398:	39 8d       	ldd	r19, Y+25	; 0x19
 39a:	4a 8d       	ldd	r20, Y+26	; 0x1a
 39c:	5b 8d       	ldd	r21, Y+27	; 0x1b
 39e:	6c 8d       	ldd	r22, Y+28	; 0x1c
 3a0:	7d 8d       	ldd	r23, Y+29	; 0x1d
 3a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
 3a4:	9f 8d       	ldd	r25, Y+31	; 0x1f
 3a6:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>

}
 3aa:	2a 96       	adiw	r28, 0x0a	; 10
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	f8 94       	cli
 3b0:	de bf       	out	0x3e, r29	; 62
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	cd bf       	out	0x3d, r28	; 61
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	1f 91       	pop	r17
 3bc:	0f 91       	pop	r16
 3be:	ff 90       	pop	r15
 3c0:	ef 90       	pop	r14
 3c2:	df 90       	pop	r13
 3c4:	cf 90       	pop	r12
 3c6:	bf 90       	pop	r11
 3c8:	08 95       	ret

000003ca <CAR_WHEELS_stop>:

void CAR_WHEELS_stop(DC_MOTOR_t right_wheel, DC_MOTOR_t left_wheel){
 3ca:	ef 92       	push	r14
 3cc:	0f 93       	push	r16
 3ce:	1f 93       	push	r17
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	cd b7       	in	r28, 0x3d	; 61
 3d6:	de b7       	in	r29, 0x3e	; 62
 3d8:	2a 97       	sbiw	r28, 0x0a	; 10
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	f8 94       	cli
 3de:	de bf       	out	0x3e, r29	; 62
 3e0:	0f be       	out	0x3f, r0	; 63
 3e2:	cd bf       	out	0x3d, r28	; 61
	
			DC_MOTOR_set_direction(right_wheel,off);
 3e4:	e1 2c       	mov	r14, r1
 3e6:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>
			DC_MOTOR_set_direction(left_wheel,off);
 3ea:	0a 89       	ldd	r16, Y+18	; 0x12
 3ec:	1b 89       	ldd	r17, Y+19	; 0x13
 3ee:	2c 89       	ldd	r18, Y+20	; 0x14
 3f0:	3d 89       	ldd	r19, Y+21	; 0x15
 3f2:	4e 89       	ldd	r20, Y+22	; 0x16
 3f4:	5f 89       	ldd	r21, Y+23	; 0x17
 3f6:	68 8d       	ldd	r22, Y+24	; 0x18
 3f8:	79 8d       	ldd	r23, Y+25	; 0x19
 3fa:	8a 8d       	ldd	r24, Y+26	; 0x1a
 3fc:	9b 8d       	ldd	r25, Y+27	; 0x1b
 3fe:	0e 94 77 02 	call	0x4ee	; 0x4ee <DC_MOTOR_set_direction>

	
}
 402:	2a 96       	adiw	r28, 0x0a	; 10
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	f8 94       	cli
 408:	de bf       	out	0x3e, r29	; 62
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	ef 90       	pop	r14
 418:	08 95       	ret

0000041a <DC_MOTOR_init>:
 *  Author: Florida
 */ 

#include "dc_motor.h"

void DC_MOTOR_init(DC_MOTOR_t motor){
 41a:	0f 93       	push	r16
 41c:	1f 93       	push	r17
 41e:	cf 93       	push	r28
 420:	df 93       	push	r29
 422:	cd b7       	in	r28, 0x3d	; 61
 424:	de b7       	in	r29, 0x3e	; 62
 426:	2a 97       	sbiw	r28, 0x0a	; 10
 428:	0f b6       	in	r0, 0x3f	; 63
 42a:	f8 94       	cli
 42c:	de bf       	out	0x3e, r29	; 62
 42e:	0f be       	out	0x3f, r0	; 63
 430:	cd bf       	out	0x3d, r28	; 61
 432:	09 83       	std	Y+1, r16	; 0x01
 434:	1a 83       	std	Y+2, r17	; 0x02
 436:	2b 83       	std	Y+3, r18	; 0x03
 438:	3c 83       	std	Y+4, r19	; 0x04
 43a:	84 2f       	mov	r24, r20
	IO_set_pin_direction(motor.motor_pins.EN_pin_group,motor.motor_pins.EN_pin_number,OUTPUT); //EN - PWM pin
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	65 2f       	mov	r22, r21
 440:	0e 94 bb 02 	call	0x576	; 0x576 <IO_set_pin_direction>
	IO_set_pin_direction(motor.motor_pins.IN1_pin_group,motor.motor_pins.IN1_pin_number,OUTPUT); //IN1 - PWM pin
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	6a 81       	ldd	r22, Y+2	; 0x02
 448:	89 81       	ldd	r24, Y+1	; 0x01
 44a:	0e 94 bb 02 	call	0x576	; 0x576 <IO_set_pin_direction>
	IO_set_pin_direction(motor.motor_pins.IN2_pin_group,motor.motor_pins.IN2_pin_number,OUTPUT); //IN1 - PWM pin	
 44e:	41 e0       	ldi	r20, 0x01	; 1
 450:	6c 81       	ldd	r22, Y+4	; 0x04
 452:	8b 81       	ldd	r24, Y+3	; 0x03
 454:	0e 94 bb 02 	call	0x576	; 0x576 <IO_set_pin_direction>
	

	
	
}
 458:	2a 96       	adiw	r28, 0x0a	; 10
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	f8 94       	cli
 45e:	de bf       	out	0x3e, r29	; 62
 460:	0f be       	out	0x3f, r0	; 63
 462:	cd bf       	out	0x3d, r28	; 61
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	08 95       	ret

0000046e <DC_MOTOR_set_duty>:

void DC_MOTOR_set_duty(DC_MOTOR_t motor,u8_t duty){
 46e:	ef 92       	push	r14
 470:	0f 93       	push	r16
 472:	1f 93       	push	r17
 474:	cf 93       	push	r28
 476:	df 93       	push	r29
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	2a 97       	sbiw	r28, 0x0a	; 10
 47e:	0f b6       	in	r0, 0x3f	; 63
 480:	f8 94       	cli
 482:	de bf       	out	0x3e, r29	; 62
 484:	0f be       	out	0x3f, r0	; 63
 486:	cd bf       	out	0x3d, r28	; 61
 488:	09 83       	std	Y+1, r16	; 0x01
 48a:	1a 83       	std	Y+2, r17	; 0x02
 48c:	2b 83       	std	Y+3, r18	; 0x03
 48e:	3c 83       	std	Y+4, r19	; 0x04
 490:	4d 83       	std	Y+5, r20	; 0x05
 492:	5e 83       	std	Y+6, r21	; 0x06
 494:	6f 83       	std	Y+7, r22	; 0x07
 496:	78 87       	std	Y+8, r23	; 0x08
 498:	89 87       	std	Y+9, r24	; 0x09
 49a:	9a 87       	std	Y+10, r25	; 0x0a
	
	(*(motor.wg_reg)) = ((u16_t)duty*((u16_t)((*(motor.top_reg))*2)-2))/(2*100);  
 49c:	e9 85       	ldd	r30, Y+9	; 0x09
 49e:	fa 85       	ldd	r31, Y+10	; 0x0a
 4a0:	af 81       	ldd	r26, Y+7	; 0x07
 4a2:	b8 85       	ldd	r27, Y+8	; 0x08
 4a4:	8d 91       	ld	r24, X+
 4a6:	9c 91       	ld	r25, X
 4a8:	81 50       	subi	r24, 0x01	; 1
 4aa:	90 48       	sbci	r25, 0x80	; 128
 4ac:	e8 9e       	mul	r14, r24
 4ae:	90 01       	movw	r18, r0
 4b0:	e9 9e       	mul	r14, r25
 4b2:	30 0d       	add	r19, r0
 4b4:	11 24       	eor	r1, r1
 4b6:	22 0f       	add	r18, r18
 4b8:	33 1f       	adc	r19, r19
 4ba:	36 95       	lsr	r19
 4bc:	27 95       	ror	r18
 4be:	36 95       	lsr	r19
 4c0:	27 95       	ror	r18
 4c2:	36 95       	lsr	r19
 4c4:	27 95       	ror	r18
 4c6:	ab e7       	ldi	r26, 0x7B	; 123
 4c8:	b4 e1       	ldi	r27, 0x14	; 20
 4ca:	0e 94 b4 07 	call	0xf68	; 0xf68 <__umulhisi3>
 4ce:	96 95       	lsr	r25
 4d0:	87 95       	ror	r24
 4d2:	91 83       	std	Z+1, r25	; 0x01
 4d4:	80 83       	st	Z, r24
	  
	
	
}
 4d6:	2a 96       	adiw	r28, 0x0a	; 10
 4d8:	0f b6       	in	r0, 0x3f	; 63
 4da:	f8 94       	cli
 4dc:	de bf       	out	0x3e, r29	; 62
 4de:	0f be       	out	0x3f, r0	; 63
 4e0:	cd bf       	out	0x3d, r28	; 61
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	1f 91       	pop	r17
 4e8:	0f 91       	pop	r16
 4ea:	ef 90       	pop	r14
 4ec:	08 95       	ret

000004ee <DC_MOTOR_set_direction>:
void DC_MOTOR_set_direction(DC_MOTOR_t motor ,DC_MOTOR_direction_t dir){
 4ee:	ef 92       	push	r14
 4f0:	0f 93       	push	r16
 4f2:	1f 93       	push	r17
 4f4:	cf 93       	push	r28
 4f6:	df 93       	push	r29
 4f8:	cd b7       	in	r28, 0x3d	; 61
 4fa:	de b7       	in	r29, 0x3e	; 62
 4fc:	2a 97       	sbiw	r28, 0x0a	; 10
 4fe:	0f b6       	in	r0, 0x3f	; 63
 500:	f8 94       	cli
 502:	de bf       	out	0x3e, r29	; 62
 504:	0f be       	out	0x3f, r0	; 63
 506:	cd bf       	out	0x3d, r28	; 61
 508:	09 83       	std	Y+1, r16	; 0x01
 50a:	1a 83       	std	Y+2, r17	; 0x02
 50c:	2b 83       	std	Y+3, r18	; 0x03
 50e:	3c 83       	std	Y+4, r19	; 0x04
	
	switch(dir){
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	e8 16       	cp	r14, r24
 514:	21 f0       	breq	.+8      	; 0x51e <DC_MOTOR_set_direction+0x30>
 516:	82 e0       	ldi	r24, 0x02	; 2
 518:	e8 16       	cp	r14, r24
 51a:	61 f0       	breq	.+24     	; 0x534 <DC_MOTOR_set_direction+0x46>
 51c:	16 c0       	rjmp	.+44     	; 0x54a <DC_MOTOR_set_direction+0x5c>
			
		case forward:
			IO_set_pin_data(motor.motor_pins.IN1_pin_group,motor.motor_pins.IN1_pin_number,HIGH);
 51e:	41 e0       	ldi	r20, 0x01	; 1
 520:	6a 81       	ldd	r22, Y+2	; 0x02
 522:	89 81       	ldd	r24, Y+1	; 0x01
 524:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
			IO_set_pin_data(motor.motor_pins.IN2_pin_group,motor.motor_pins.IN2_pin_number,LOW);
 528:	40 e0       	ldi	r20, 0x00	; 0
 52a:	6c 81       	ldd	r22, Y+4	; 0x04
 52c:	8b 81       	ldd	r24, Y+3	; 0x03
 52e:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
		break;
 532:	15 c0       	rjmp	.+42     	; 0x55e <DC_MOTOR_set_direction+0x70>
		
		case backward:
			IO_set_pin_data(motor.motor_pins.IN1_pin_group,motor.motor_pins.IN1_pin_number,LOW);
 534:	40 e0       	ldi	r20, 0x00	; 0
 536:	6a 81       	ldd	r22, Y+2	; 0x02
 538:	89 81       	ldd	r24, Y+1	; 0x01
 53a:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
			IO_set_pin_data(motor.motor_pins.IN2_pin_group,motor.motor_pins.IN2_pin_number,HIGH);
 53e:	41 e0       	ldi	r20, 0x01	; 1
 540:	6c 81       	ldd	r22, Y+4	; 0x04
 542:	8b 81       	ldd	r24, Y+3	; 0x03
 544:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
		break;
 548:	0a c0       	rjmp	.+20     	; 0x55e <DC_MOTOR_set_direction+0x70>
				

		case off:
		default:
			IO_set_pin_data(motor.motor_pins.IN1_pin_group,motor.motor_pins.IN1_pin_number,LOW);
 54a:	40 e0       	ldi	r20, 0x00	; 0
 54c:	6a 81       	ldd	r22, Y+2	; 0x02
 54e:	89 81       	ldd	r24, Y+1	; 0x01
 550:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
			IO_set_pin_data(motor.motor_pins.IN2_pin_group,motor.motor_pins.IN2_pin_number,LOW);
 554:	40 e0       	ldi	r20, 0x00	; 0
 556:	6c 81       	ldd	r22, Y+4	; 0x04
 558:	8b 81       	ldd	r24, Y+3	; 0x03
 55a:	0e 94 2b 03 	call	0x656	; 0x656 <IO_set_pin_data>
		break;

	}
	
 55e:	2a 96       	adiw	r28, 0x0a	; 10
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	f8 94       	cli
 564:	de bf       	out	0x3e, r29	; 62
 566:	0f be       	out	0x3f, r0	; 63
 568:	cd bf       	out	0x3d, r28	; 61
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ef 90       	pop	r14
 574:	08 95       	ret

00000576 <IO_set_pin_direction>:
 576:	82 30       	cpi	r24, 0x02	; 2
 578:	19 f1       	breq	.+70     	; 0x5c0 <IO_set_pin_direction+0x4a>
 57a:	18 f4       	brcc	.+6      	; 0x582 <IO_set_pin_direction+0xc>
 57c:	81 30       	cpi	r24, 0x01	; 1
 57e:	39 f0       	breq	.+14     	; 0x58e <IO_set_pin_direction+0x18>
 580:	08 95       	ret
 582:	83 30       	cpi	r24, 0x03	; 3
 584:	b1 f1       	breq	.+108    	; 0x5f2 <IO_set_pin_direction+0x7c>
 586:	84 30       	cpi	r24, 0x04	; 4
 588:	09 f4       	brne	.+2      	; 0x58c <IO_set_pin_direction+0x16>
 58a:	4c c0       	rjmp	.+152    	; 0x624 <IO_set_pin_direction+0xae>
 58c:	08 95       	ret
 58e:	44 23       	and	r20, r20
 590:	59 f0       	breq	.+22     	; 0x5a8 <IO_set_pin_direction+0x32>
 592:	2a b3       	in	r18, 0x1a	; 26
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	02 c0       	rjmp	.+4      	; 0x59e <IO_set_pin_direction+0x28>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	6a 95       	dec	r22
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <IO_set_pin_direction+0x24>
 5a2:	82 2b       	or	r24, r18
 5a4:	8a bb       	out	0x1a, r24	; 26
 5a6:	08 95       	ret
 5a8:	2a b3       	in	r18, 0x1a	; 26
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <IO_set_pin_direction+0x3e>
 5b0:	88 0f       	add	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	6a 95       	dec	r22
 5b6:	e2 f7       	brpl	.-8      	; 0x5b0 <IO_set_pin_direction+0x3a>
 5b8:	80 95       	com	r24
 5ba:	82 23       	and	r24, r18
 5bc:	8a bb       	out	0x1a, r24	; 26
 5be:	08 95       	ret
 5c0:	44 23       	and	r20, r20
 5c2:	59 f0       	breq	.+22     	; 0x5da <IO_set_pin_direction+0x64>
 5c4:	27 b3       	in	r18, 0x17	; 23
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <IO_set_pin_direction+0x5a>
 5cc:	88 0f       	add	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	6a 95       	dec	r22
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <IO_set_pin_direction+0x56>
 5d4:	82 2b       	or	r24, r18
 5d6:	87 bb       	out	0x17, r24	; 23
 5d8:	08 95       	ret
 5da:	27 b3       	in	r18, 0x17	; 23
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <IO_set_pin_direction+0x70>
 5e2:	88 0f       	add	r24, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	6a 95       	dec	r22
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <IO_set_pin_direction+0x6c>
 5ea:	80 95       	com	r24
 5ec:	82 23       	and	r24, r18
 5ee:	87 bb       	out	0x17, r24	; 23
 5f0:	08 95       	ret
 5f2:	44 23       	and	r20, r20
 5f4:	59 f0       	breq	.+22     	; 0x60c <IO_set_pin_direction+0x96>
 5f6:	24 b3       	in	r18, 0x14	; 20
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <IO_set_pin_direction+0x8c>
 5fe:	88 0f       	add	r24, r24
 600:	99 1f       	adc	r25, r25
 602:	6a 95       	dec	r22
 604:	e2 f7       	brpl	.-8      	; 0x5fe <IO_set_pin_direction+0x88>
 606:	82 2b       	or	r24, r18
 608:	84 bb       	out	0x14, r24	; 20
 60a:	08 95       	ret
 60c:	24 b3       	in	r18, 0x14	; 20
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <IO_set_pin_direction+0xa2>
 614:	88 0f       	add	r24, r24
 616:	99 1f       	adc	r25, r25
 618:	6a 95       	dec	r22
 61a:	e2 f7       	brpl	.-8      	; 0x614 <IO_set_pin_direction+0x9e>
 61c:	80 95       	com	r24
 61e:	82 23       	and	r24, r18
 620:	84 bb       	out	0x14, r24	; 20
 622:	08 95       	ret
 624:	44 23       	and	r20, r20
 626:	59 f0       	breq	.+22     	; 0x63e <IO_set_pin_direction+0xc8>
 628:	21 b3       	in	r18, 0x11	; 17
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	02 c0       	rjmp	.+4      	; 0x634 <IO_set_pin_direction+0xbe>
 630:	88 0f       	add	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	6a 95       	dec	r22
 636:	e2 f7       	brpl	.-8      	; 0x630 <IO_set_pin_direction+0xba>
 638:	82 2b       	or	r24, r18
 63a:	81 bb       	out	0x11, r24	; 17
 63c:	08 95       	ret
 63e:	21 b3       	in	r18, 0x11	; 17
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <IO_set_pin_direction+0xd4>
 646:	88 0f       	add	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	6a 95       	dec	r22
 64c:	e2 f7       	brpl	.-8      	; 0x646 <IO_set_pin_direction+0xd0>
 64e:	80 95       	com	r24
 650:	82 23       	and	r24, r18
 652:	81 bb       	out	0x11, r24	; 17
 654:	08 95       	ret

00000656 <IO_set_pin_data>:
 656:	82 30       	cpi	r24, 0x02	; 2
 658:	19 f1       	breq	.+70     	; 0x6a0 <IO_set_pin_data+0x4a>
 65a:	18 f4       	brcc	.+6      	; 0x662 <IO_set_pin_data+0xc>
 65c:	81 30       	cpi	r24, 0x01	; 1
 65e:	39 f0       	breq	.+14     	; 0x66e <IO_set_pin_data+0x18>
 660:	08 95       	ret
 662:	83 30       	cpi	r24, 0x03	; 3
 664:	b1 f1       	breq	.+108    	; 0x6d2 <IO_set_pin_data+0x7c>
 666:	84 30       	cpi	r24, 0x04	; 4
 668:	09 f4       	brne	.+2      	; 0x66c <IO_set_pin_data+0x16>
 66a:	4c c0       	rjmp	.+152    	; 0x704 <IO_set_pin_data+0xae>
 66c:	08 95       	ret
 66e:	44 23       	and	r20, r20
 670:	59 f0       	breq	.+22     	; 0x688 <IO_set_pin_data+0x32>
 672:	2b b3       	in	r18, 0x1b	; 27
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	02 c0       	rjmp	.+4      	; 0x67e <IO_set_pin_data+0x28>
 67a:	88 0f       	add	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	6a 95       	dec	r22
 680:	e2 f7       	brpl	.-8      	; 0x67a <IO_set_pin_data+0x24>
 682:	82 2b       	or	r24, r18
 684:	8b bb       	out	0x1b, r24	; 27
 686:	08 95       	ret
 688:	2b b3       	in	r18, 0x1b	; 27
 68a:	81 e0       	ldi	r24, 0x01	; 1
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	02 c0       	rjmp	.+4      	; 0x694 <IO_set_pin_data+0x3e>
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	6a 95       	dec	r22
 696:	e2 f7       	brpl	.-8      	; 0x690 <IO_set_pin_data+0x3a>
 698:	80 95       	com	r24
 69a:	82 23       	and	r24, r18
 69c:	8b bb       	out	0x1b, r24	; 27
 69e:	08 95       	ret
 6a0:	44 23       	and	r20, r20
 6a2:	59 f0       	breq	.+22     	; 0x6ba <IO_set_pin_data+0x64>
 6a4:	28 b3       	in	r18, 0x18	; 24
 6a6:	81 e0       	ldi	r24, 0x01	; 1
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <IO_set_pin_data+0x5a>
 6ac:	88 0f       	add	r24, r24
 6ae:	99 1f       	adc	r25, r25
 6b0:	6a 95       	dec	r22
 6b2:	e2 f7       	brpl	.-8      	; 0x6ac <IO_set_pin_data+0x56>
 6b4:	82 2b       	or	r24, r18
 6b6:	88 bb       	out	0x18, r24	; 24
 6b8:	08 95       	ret
 6ba:	28 b3       	in	r18, 0x18	; 24
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <IO_set_pin_data+0x70>
 6c2:	88 0f       	add	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	6a 95       	dec	r22
 6c8:	e2 f7       	brpl	.-8      	; 0x6c2 <IO_set_pin_data+0x6c>
 6ca:	80 95       	com	r24
 6cc:	82 23       	and	r24, r18
 6ce:	88 bb       	out	0x18, r24	; 24
 6d0:	08 95       	ret
 6d2:	44 23       	and	r20, r20
 6d4:	59 f0       	breq	.+22     	; 0x6ec <IO_set_pin_data+0x96>
 6d6:	25 b3       	in	r18, 0x15	; 21
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <IO_set_pin_data+0x8c>
 6de:	88 0f       	add	r24, r24
 6e0:	99 1f       	adc	r25, r25
 6e2:	6a 95       	dec	r22
 6e4:	e2 f7       	brpl	.-8      	; 0x6de <IO_set_pin_data+0x88>
 6e6:	82 2b       	or	r24, r18
 6e8:	85 bb       	out	0x15, r24	; 21
 6ea:	08 95       	ret
 6ec:	25 b3       	in	r18, 0x15	; 21
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <IO_set_pin_data+0xa2>
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	6a 95       	dec	r22
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <IO_set_pin_data+0x9e>
 6fc:	80 95       	com	r24
 6fe:	82 23       	and	r24, r18
 700:	85 bb       	out	0x15, r24	; 21
 702:	08 95       	ret
 704:	44 23       	and	r20, r20
 706:	59 f0       	breq	.+22     	; 0x71e <IO_set_pin_data+0xc8>
 708:	22 b3       	in	r18, 0x12	; 18
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 c0       	rjmp	.+4      	; 0x714 <IO_set_pin_data+0xbe>
 710:	88 0f       	add	r24, r24
 712:	99 1f       	adc	r25, r25
 714:	6a 95       	dec	r22
 716:	e2 f7       	brpl	.-8      	; 0x710 <IO_set_pin_data+0xba>
 718:	82 2b       	or	r24, r18
 71a:	82 bb       	out	0x12, r24	; 18
 71c:	08 95       	ret
 71e:	22 b3       	in	r18, 0x12	; 18
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <IO_set_pin_data+0xd4>
 726:	88 0f       	add	r24, r24
 728:	99 1f       	adc	r25, r25
 72a:	6a 95       	dec	r22
 72c:	e2 f7       	brpl	.-8      	; 0x726 <IO_set_pin_data+0xd0>
 72e:	80 95       	com	r24
 730:	82 23       	and	r24, r18
 732:	82 bb       	out	0x12, r24	; 18
 734:	08 95       	ret

00000736 <IO_get_pin_data>:
 736:	82 30       	cpi	r24, 0x02	; 2
 738:	e9 f0       	breq	.+58     	; 0x774 <IO_get_pin_data+0x3e>
 73a:	18 f4       	brcc	.+6      	; 0x742 <IO_get_pin_data+0xc>
 73c:	81 30       	cpi	r24, 0x01	; 1
 73e:	31 f0       	breq	.+12     	; 0x74c <IO_get_pin_data+0x16>
 740:	55 c0       	rjmp	.+170    	; 0x7ec <IO_get_pin_data+0xb6>
 742:	83 30       	cpi	r24, 0x03	; 3
 744:	59 f1       	breq	.+86     	; 0x79c <IO_get_pin_data+0x66>
 746:	84 30       	cpi	r24, 0x04	; 4
 748:	e9 f1       	breq	.+122    	; 0x7c4 <IO_get_pin_data+0x8e>
 74a:	50 c0       	rjmp	.+160    	; 0x7ec <IO_get_pin_data+0xb6>
 74c:	49 b3       	in	r20, 0x19	; 25
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	9c 01       	movw	r18, r24
 754:	06 2e       	mov	r0, r22
 756:	02 c0       	rjmp	.+4      	; 0x75c <IO_get_pin_data+0x26>
 758:	22 0f       	add	r18, r18
 75a:	33 1f       	adc	r19, r19
 75c:	0a 94       	dec	r0
 75e:	e2 f7       	brpl	.-8      	; 0x758 <IO_get_pin_data+0x22>
 760:	84 2f       	mov	r24, r20
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	82 23       	and	r24, r18
 766:	93 23       	and	r25, r19
 768:	02 c0       	rjmp	.+4      	; 0x76e <IO_get_pin_data+0x38>
 76a:	95 95       	asr	r25
 76c:	87 95       	ror	r24
 76e:	6a 95       	dec	r22
 770:	e2 f7       	brpl	.-8      	; 0x76a <IO_get_pin_data+0x34>
 772:	08 95       	ret
 774:	46 b3       	in	r20, 0x16	; 22
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	9c 01       	movw	r18, r24
 77c:	06 2e       	mov	r0, r22
 77e:	02 c0       	rjmp	.+4      	; 0x784 <IO_get_pin_data+0x4e>
 780:	22 0f       	add	r18, r18
 782:	33 1f       	adc	r19, r19
 784:	0a 94       	dec	r0
 786:	e2 f7       	brpl	.-8      	; 0x780 <IO_get_pin_data+0x4a>
 788:	84 2f       	mov	r24, r20
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	82 23       	and	r24, r18
 78e:	93 23       	and	r25, r19
 790:	02 c0       	rjmp	.+4      	; 0x796 <IO_get_pin_data+0x60>
 792:	95 95       	asr	r25
 794:	87 95       	ror	r24
 796:	6a 95       	dec	r22
 798:	e2 f7       	brpl	.-8      	; 0x792 <IO_get_pin_data+0x5c>
 79a:	08 95       	ret
 79c:	43 b3       	in	r20, 0x13	; 19
 79e:	81 e0       	ldi	r24, 0x01	; 1
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	9c 01       	movw	r18, r24
 7a4:	06 2e       	mov	r0, r22
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <IO_get_pin_data+0x76>
 7a8:	22 0f       	add	r18, r18
 7aa:	33 1f       	adc	r19, r19
 7ac:	0a 94       	dec	r0
 7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <IO_get_pin_data+0x72>
 7b0:	84 2f       	mov	r24, r20
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	82 23       	and	r24, r18
 7b6:	93 23       	and	r25, r19
 7b8:	02 c0       	rjmp	.+4      	; 0x7be <IO_get_pin_data+0x88>
 7ba:	95 95       	asr	r25
 7bc:	87 95       	ror	r24
 7be:	6a 95       	dec	r22
 7c0:	e2 f7       	brpl	.-8      	; 0x7ba <IO_get_pin_data+0x84>
 7c2:	08 95       	ret
 7c4:	40 b3       	in	r20, 0x10	; 16
 7c6:	81 e0       	ldi	r24, 0x01	; 1
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	9c 01       	movw	r18, r24
 7cc:	06 2e       	mov	r0, r22
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <IO_get_pin_data+0x9e>
 7d0:	22 0f       	add	r18, r18
 7d2:	33 1f       	adc	r19, r19
 7d4:	0a 94       	dec	r0
 7d6:	e2 f7       	brpl	.-8      	; 0x7d0 <IO_get_pin_data+0x9a>
 7d8:	84 2f       	mov	r24, r20
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	82 23       	and	r24, r18
 7de:	93 23       	and	r25, r19
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <IO_get_pin_data+0xb0>
 7e2:	95 95       	asr	r25
 7e4:	87 95       	ror	r24
 7e6:	6a 95       	dec	r22
 7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <IO_get_pin_data+0xac>
 7ea:	08 95       	ret
 7ec:	80 e0       	ldi	r24, 0x00	; 0
 7ee:	08 95       	ret

000007f0 <main>:
#include "car_wheels.h"
///CAR MOTORS TEST



int main(){
 7f0:	cf 93       	push	r28
 7f2:	df 93       	push	r29
 7f4:	cd b7       	in	r28, 0x3d	; 61
 7f6:	de b7       	in	r29, 0x3e	; 62
 7f8:	6c 97       	sbiw	r28, 0x1c	; 28
 7fa:	0f b6       	in	r0, 0x3f	; 63
 7fc:	f8 94       	cli
 7fe:	de bf       	out	0x3e, r29	; 62
 800:	0f be       	out	0x3f, r0	; 63
 802:	cd bf       	out	0x3d, r28	; 61
	
	///////////////////////TCRT5000 SENSOR///////////////////////////////////////
	IO_set_pin_direction(GROUPA,PIN_0,INPUT); //right
 804:	40 e0       	ldi	r20, 0x00	; 0
 806:	60 e0       	ldi	r22, 0x00	; 0
 808:	81 e0       	ldi	r24, 0x01	; 1
 80a:	0e 94 bb 02 	call	0x576	; 0x576 <IO_set_pin_direction>
	IO_set_pin_direction(GROUPA,PIN_1,INPUT); //left
 80e:	40 e0       	ldi	r20, 0x00	; 0
 810:	61 e0       	ldi	r22, 0x01	; 1
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	0e 94 bb 02 	call	0x576	; 0x576 <IO_set_pin_direction>
	
	//START//////////////////////////RIGHT/LEFT MOTOR Configuration CODE/////////////////////////////////

	DC_MOTOR_t right_motor;
	DC_MOTOR_t left_motor;
	CAR_WHEELS_init_motors(&right_motor, &left_motor);
 818:	be 01       	movw	r22, r28
 81a:	65 5f       	subi	r22, 0xF5	; 245
 81c:	7f 4f       	sbci	r23, 0xFF	; 255
 81e:	ce 01       	movw	r24, r28
 820:	01 96       	adiw	r24, 0x01	; 1
 822:	0e 94 4e 00 	call	0x9c	; 0x9c <CAR_WHEELS_init_motors>
	
	//Timer1 Config: Motor Timer
	 TIMER1_config_t motor_control_timer;
	 motor_control_timer.clk_mode = PRESCALER_256 ;
 826:	84 e0       	ldi	r24, 0x04	; 4
 828:	88 8f       	std	Y+24, r24	; 0x18
	 
	
	 motor_control_timer.output_compare_modeA = NON_INVERTING_PWM; 
 82a:	85 e0       	ldi	r24, 0x05	; 5
 82c:	8e 8b       	std	Y+22, r24	; 0x16
	 motor_control_timer.output_compare_modeB = NON_INVERTING_PWM;
 82e:	8f 8b       	std	Y+23, r24	; 0x17
	 motor_control_timer.timer_mode = PC_PWM_ICR1;
 830:	8a e0       	ldi	r24, 0x0A	; 10
 832:	8d 8b       	std	Y+21, r24	; 0x15
	 TIMER1_init(motor_control_timer);
 834:	2a e0       	ldi	r18, 0x0A	; 10
 836:	35 e0       	ldi	r19, 0x05	; 5
 838:	45 e0       	ldi	r20, 0x05	; 5
 83a:	54 e0       	ldi	r21, 0x04	; 4
 83c:	69 8d       	ldd	r22, Y+25	; 0x19
 83e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 840:	8b 8d       	ldd	r24, Y+27	; 0x1b
 842:	9c 8d       	ldd	r25, Y+28	; 0x1c
 844:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TIMER1_init>
	
	//END//////////////////////////MOTOR CODE/////////////////////////////////

	while(1){
		if((IO_get_pin_data(GROUPA,PIN_0) == 0) && (IO_get_pin_data(GROUPA,PIN_1) == 1) ){  //the right sensor is out of the line
 848:	60 e0       	ldi	r22, 0x00	; 0
 84a:	81 e0       	ldi	r24, 0x01	; 1
 84c:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 850:	81 11       	cpse	r24, r1
 852:	2a c0       	rjmp	.+84     	; 0x8a8 <__stack+0x49>
 854:	61 e0       	ldi	r22, 0x01	; 1
 856:	81 e0       	ldi	r24, 0x01	; 1
 858:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 85c:	81 30       	cpi	r24, 0x01	; 1
 85e:	21 f5       	brne	.+72     	; 0x8a8 <__stack+0x49>
			
			CAR_WHEELS_turn_right(right_motor,left_motor);
 860:	8d b7       	in	r24, 0x3d	; 61
 862:	9e b7       	in	r25, 0x3e	; 62
 864:	0a 97       	sbiw	r24, 0x0a	; 10
 866:	0f b6       	in	r0, 0x3f	; 63
 868:	f8 94       	cli
 86a:	9e bf       	out	0x3e, r25	; 62
 86c:	0f be       	out	0x3f, r0	; 63
 86e:	8d bf       	out	0x3d, r24	; 61
 870:	ad b7       	in	r26, 0x3d	; 61
 872:	be b7       	in	r27, 0x3e	; 62
 874:	11 96       	adiw	r26, 0x01	; 1
 876:	8a e0       	ldi	r24, 0x0A	; 10
 878:	fe 01       	movw	r30, r28
 87a:	3b 96       	adiw	r30, 0x0b	; 11
 87c:	01 90       	ld	r0, Z+
 87e:	0d 92       	st	X+, r0
 880:	8a 95       	dec	r24
 882:	e1 f7       	brne	.-8      	; 0x87c <__stack+0x1d>
 884:	09 81       	ldd	r16, Y+1	; 0x01
 886:	1a 81       	ldd	r17, Y+2	; 0x02
 888:	2b 81       	ldd	r18, Y+3	; 0x03
 88a:	3c 81       	ldd	r19, Y+4	; 0x04
 88c:	4d 81       	ldd	r20, Y+5	; 0x05
 88e:	5e 81       	ldd	r21, Y+6	; 0x06
 890:	6f 81       	ldd	r22, Y+7	; 0x07
 892:	78 85       	ldd	r23, Y+8	; 0x08
 894:	89 85       	ldd	r24, Y+9	; 0x09
 896:	9a 85       	ldd	r25, Y+10	; 0x0a
 898:	0e 94 4d 01 	call	0x29a	; 0x29a <CAR_WHEELS_turn_right>
 89c:	0f b6       	in	r0, 0x3f	; 63
 89e:	f8 94       	cli
 8a0:	de bf       	out	0x3e, r29	; 62
 8a2:	0f be       	out	0x3f, r0	; 63
 8a4:	cd bf       	out	0x3d, r28	; 61
 8a6:	d0 cf       	rjmp	.-96     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
			
		}
		else if ((IO_get_pin_data(GROUPA,PIN_0) == 1) && (IO_get_pin_data(GROUPA,PIN_1) == 0) ){ //the left sensor is out of the line
 8a8:	60 e0       	ldi	r22, 0x00	; 0
 8aa:	81 e0       	ldi	r24, 0x01	; 1
 8ac:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 8b0:	81 30       	cpi	r24, 0x01	; 1
 8b2:	49 f5       	brne	.+82     	; 0x906 <__stack+0xa7>
 8b4:	61 e0       	ldi	r22, 0x01	; 1
 8b6:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 8ba:	81 11       	cpse	r24, r1
 8bc:	24 c0       	rjmp	.+72     	; 0x906 <__stack+0xa7>
			
			CAR_WHEELS_turn_left(right_motor,left_motor);
 8be:	8d b7       	in	r24, 0x3d	; 61
 8c0:	9e b7       	in	r25, 0x3e	; 62
 8c2:	0a 97       	sbiw	r24, 0x0a	; 10
 8c4:	0f b6       	in	r0, 0x3f	; 63
 8c6:	f8 94       	cli
 8c8:	9e bf       	out	0x3e, r25	; 62
 8ca:	0f be       	out	0x3f, r0	; 63
 8cc:	8d bf       	out	0x3d, r24	; 61
 8ce:	ad b7       	in	r26, 0x3d	; 61
 8d0:	be b7       	in	r27, 0x3e	; 62
 8d2:	11 96       	adiw	r26, 0x01	; 1
 8d4:	8a e0       	ldi	r24, 0x0A	; 10
 8d6:	fe 01       	movw	r30, r28
 8d8:	3b 96       	adiw	r30, 0x0b	; 11
 8da:	01 90       	ld	r0, Z+
 8dc:	0d 92       	st	X+, r0
 8de:	8a 95       	dec	r24
 8e0:	e1 f7       	brne	.-8      	; 0x8da <__stack+0x7b>
 8e2:	09 81       	ldd	r16, Y+1	; 0x01
 8e4:	1a 81       	ldd	r17, Y+2	; 0x02
 8e6:	2b 81       	ldd	r18, Y+3	; 0x03
 8e8:	3c 81       	ldd	r19, Y+4	; 0x04
 8ea:	4d 81       	ldd	r20, Y+5	; 0x05
 8ec:	5e 81       	ldd	r21, Y+6	; 0x06
 8ee:	6f 81       	ldd	r22, Y+7	; 0x07
 8f0:	78 85       	ldd	r23, Y+8	; 0x08
 8f2:	89 85       	ldd	r24, Y+9	; 0x09
 8f4:	9a 85       	ldd	r25, Y+10	; 0x0a
 8f6:	0e 94 99 01 	call	0x332	; 0x332 <CAR_WHEELS_turn_left>
 8fa:	0f b6       	in	r0, 0x3f	; 63
 8fc:	f8 94       	cli
 8fe:	de bf       	out	0x3e, r29	; 62
 900:	0f be       	out	0x3f, r0	; 63
 902:	cd bf       	out	0x3d, r28	; 61
 904:	a1 cf       	rjmp	.-190    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
			
		}
		else if ((IO_get_pin_data(GROUPA,PIN_0) == 1) && (IO_get_pin_data(GROUPA,PIN_1) == 1) ){  //Both sensors are on the line
 906:	60 e0       	ldi	r22, 0x00	; 0
 908:	81 e0       	ldi	r24, 0x01	; 1
 90a:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 90e:	81 30       	cpi	r24, 0x01	; 1
 910:	49 f5       	brne	.+82     	; 0x964 <__stack+0x105>
 912:	61 e0       	ldi	r22, 0x01	; 1
 914:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 918:	81 30       	cpi	r24, 0x01	; 1
 91a:	21 f5       	brne	.+72     	; 0x964 <__stack+0x105>
			
			CAR_WHEELS_move_forward(right_motor,left_motor);
 91c:	8d b7       	in	r24, 0x3d	; 61
 91e:	9e b7       	in	r25, 0x3e	; 62
 920:	0a 97       	sbiw	r24, 0x0a	; 10
 922:	0f b6       	in	r0, 0x3f	; 63
 924:	f8 94       	cli
 926:	9e bf       	out	0x3e, r25	; 62
 928:	0f be       	out	0x3f, r0	; 63
 92a:	8d bf       	out	0x3d, r24	; 61
 92c:	ad b7       	in	r26, 0x3d	; 61
 92e:	be b7       	in	r27, 0x3e	; 62
 930:	11 96       	adiw	r26, 0x01	; 1
 932:	8a e0       	ldi	r24, 0x0A	; 10
 934:	fe 01       	movw	r30, r28
 936:	3b 96       	adiw	r30, 0x0b	; 11
 938:	01 90       	ld	r0, Z+
 93a:	0d 92       	st	X+, r0
 93c:	8a 95       	dec	r24
 93e:	e1 f7       	brne	.-8      	; 0x938 <__stack+0xd9>
 940:	09 81       	ldd	r16, Y+1	; 0x01
 942:	1a 81       	ldd	r17, Y+2	; 0x02
 944:	2b 81       	ldd	r18, Y+3	; 0x03
 946:	3c 81       	ldd	r19, Y+4	; 0x04
 948:	4d 81       	ldd	r20, Y+5	; 0x05
 94a:	5e 81       	ldd	r21, Y+6	; 0x06
 94c:	6f 81       	ldd	r22, Y+7	; 0x07
 94e:	78 85       	ldd	r23, Y+8	; 0x08
 950:	89 85       	ldd	r24, Y+9	; 0x09
 952:	9a 85       	ldd	r25, Y+10	; 0x0a
 954:	0e 94 f6 00 	call	0x1ec	; 0x1ec <CAR_WHEELS_move_forward>
 958:	0f b6       	in	r0, 0x3f	; 63
 95a:	f8 94       	cli
 95c:	de bf       	out	0x3e, r29	; 62
 95e:	0f be       	out	0x3f, r0	; 63
 960:	cd bf       	out	0x3d, r28	; 61
 962:	72 cf       	rjmp	.-284    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
			
		}
		else if ((IO_get_pin_data(GROUPA,PIN_0) == 0) && (IO_get_pin_data(GROUPA,PIN_1) == 0) ){  //Both sensors are out of the line
 964:	60 e0       	ldi	r22, 0x00	; 0
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 96c:	81 11       	cpse	r24, r1
 96e:	6c cf       	rjmp	.-296    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 970:	61 e0       	ldi	r22, 0x01	; 1
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	0e 94 9b 03 	call	0x736	; 0x736 <IO_get_pin_data>
 978:	81 11       	cpse	r24, r1
 97a:	66 cf       	rjmp	.-308    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
			
			CAR_WHEELS_stop(right_motor,left_motor);
 97c:	8d b7       	in	r24, 0x3d	; 61
 97e:	9e b7       	in	r25, 0x3e	; 62
 980:	0a 97       	sbiw	r24, 0x0a	; 10
 982:	0f b6       	in	r0, 0x3f	; 63
 984:	f8 94       	cli
 986:	9e bf       	out	0x3e, r25	; 62
 988:	0f be       	out	0x3f, r0	; 63
 98a:	8d bf       	out	0x3d, r24	; 61
 98c:	ad b7       	in	r26, 0x3d	; 61
 98e:	be b7       	in	r27, 0x3e	; 62
 990:	11 96       	adiw	r26, 0x01	; 1
 992:	8a e0       	ldi	r24, 0x0A	; 10
 994:	fe 01       	movw	r30, r28
 996:	3b 96       	adiw	r30, 0x0b	; 11
 998:	01 90       	ld	r0, Z+
 99a:	0d 92       	st	X+, r0
 99c:	8a 95       	dec	r24
 99e:	e1 f7       	brne	.-8      	; 0x998 <__stack+0x139>
 9a0:	09 81       	ldd	r16, Y+1	; 0x01
 9a2:	1a 81       	ldd	r17, Y+2	; 0x02
 9a4:	2b 81       	ldd	r18, Y+3	; 0x03
 9a6:	3c 81       	ldd	r19, Y+4	; 0x04
 9a8:	4d 81       	ldd	r20, Y+5	; 0x05
 9aa:	5e 81       	ldd	r21, Y+6	; 0x06
 9ac:	6f 81       	ldd	r22, Y+7	; 0x07
 9ae:	78 85       	ldd	r23, Y+8	; 0x08
 9b0:	89 85       	ldd	r24, Y+9	; 0x09
 9b2:	9a 85       	ldd	r25, Y+10	; 0x0a
 9b4:	0e 94 e5 01 	call	0x3ca	; 0x3ca <CAR_WHEELS_stop>
 9b8:	0f b6       	in	r0, 0x3f	; 63
 9ba:	f8 94       	cli
 9bc:	de bf       	out	0x3e, r29	; 62
 9be:	0f be       	out	0x3f, r0	; 63
 9c0:	cd bf       	out	0x3d, r28	; 61
 9c2:	42 cf       	rjmp	.-380    	; 0x848 <__DATA_REGION_LENGTH__+0x48>

000009c4 <TIMER1_init>:
 9c4:	cf 93       	push	r28
 9c6:	df 93       	push	r29
 9c8:	cd b7       	in	r28, 0x3d	; 61
 9ca:	de b7       	in	r29, 0x3e	; 62
 9cc:	28 97       	sbiw	r28, 0x08	; 8
 9ce:	0f b6       	in	r0, 0x3f	; 63
 9d0:	f8 94       	cli
 9d2:	de bf       	out	0x3e, r29	; 62
 9d4:	0f be       	out	0x3f, r0	; 63
 9d6:	cd bf       	out	0x3d, r28	; 61
 9d8:	29 83       	std	Y+1, r18	; 0x01
 9da:	3a 83       	std	Y+2, r19	; 0x02
 9dc:	4b 83       	std	Y+3, r20	; 0x03
 9de:	5c 83       	std	Y+4, r21	; 0x04
 9e0:	6d 83       	std	Y+5, r22	; 0x05
 9e2:	7e 83       	std	Y+6, r23	; 0x06
 9e4:	8f 83       	std	Y+7, r24	; 0x07
 9e6:	98 87       	std	Y+8, r25	; 0x08
 9e8:	82 2f       	mov	r24, r18
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	80 31       	cpi	r24, 0x10	; 16
 9ee:	91 05       	cpc	r25, r1
 9f0:	08 f0       	brcs	.+2      	; 0x9f4 <TIMER1_init+0x30>
 9f2:	c8 c0       	rjmp	.+400    	; 0xb84 <TIMER1_init+0x1c0>
 9f4:	fc 01       	movw	r30, r24
 9f6:	e6 5d       	subi	r30, 0xD6	; 214
 9f8:	ff 4f       	sbci	r31, 0xFF	; 255
 9fa:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__tablejump2__>
 9fe:	8f b5       	in	r24, 0x2f	; 47
 a00:	8e 7f       	andi	r24, 0xFE	; 254
 a02:	8f bd       	out	0x2f, r24	; 47
 a04:	8f b5       	in	r24, 0x2f	; 47
 a06:	8d 7f       	andi	r24, 0xFD	; 253
 a08:	8f bd       	out	0x2f, r24	; 47
 a0a:	8e b5       	in	r24, 0x2e	; 46
 a0c:	87 7f       	andi	r24, 0xF7	; 247
 a0e:	8e bd       	out	0x2e, r24	; 46
 a10:	8e b5       	in	r24, 0x2e	; 46
 a12:	8f 7e       	andi	r24, 0xEF	; 239
 a14:	8e bd       	out	0x2e, r24	; 46
 a16:	c2 c0       	rjmp	.+388    	; 0xb9c <TIMER1_init+0x1d8>
 a18:	8f b5       	in	r24, 0x2f	; 47
 a1a:	81 60       	ori	r24, 0x01	; 1
 a1c:	8f bd       	out	0x2f, r24	; 47
 a1e:	8f b5       	in	r24, 0x2f	; 47
 a20:	8d 7f       	andi	r24, 0xFD	; 253
 a22:	8f bd       	out	0x2f, r24	; 47
 a24:	8e b5       	in	r24, 0x2e	; 46
 a26:	87 7f       	andi	r24, 0xF7	; 247
 a28:	8e bd       	out	0x2e, r24	; 46
 a2a:	8e b5       	in	r24, 0x2e	; 46
 a2c:	8f 7e       	andi	r24, 0xEF	; 239
 a2e:	8e bd       	out	0x2e, r24	; 46
 a30:	b5 c0       	rjmp	.+362    	; 0xb9c <TIMER1_init+0x1d8>
 a32:	8f b5       	in	r24, 0x2f	; 47
 a34:	8e 7f       	andi	r24, 0xFE	; 254
 a36:	8f bd       	out	0x2f, r24	; 47
 a38:	8f b5       	in	r24, 0x2f	; 47
 a3a:	82 60       	ori	r24, 0x02	; 2
 a3c:	8f bd       	out	0x2f, r24	; 47
 a3e:	8e b5       	in	r24, 0x2e	; 46
 a40:	87 7f       	andi	r24, 0xF7	; 247
 a42:	8e bd       	out	0x2e, r24	; 46
 a44:	8e b5       	in	r24, 0x2e	; 46
 a46:	8f 7e       	andi	r24, 0xEF	; 239
 a48:	8e bd       	out	0x2e, r24	; 46
 a4a:	a8 c0       	rjmp	.+336    	; 0xb9c <TIMER1_init+0x1d8>
 a4c:	8f b5       	in	r24, 0x2f	; 47
 a4e:	81 60       	ori	r24, 0x01	; 1
 a50:	8f bd       	out	0x2f, r24	; 47
 a52:	8f b5       	in	r24, 0x2f	; 47
 a54:	82 60       	ori	r24, 0x02	; 2
 a56:	8f bd       	out	0x2f, r24	; 47
 a58:	8e b5       	in	r24, 0x2e	; 46
 a5a:	87 7f       	andi	r24, 0xF7	; 247
 a5c:	8e bd       	out	0x2e, r24	; 46
 a5e:	8e b5       	in	r24, 0x2e	; 46
 a60:	8f 7e       	andi	r24, 0xEF	; 239
 a62:	8e bd       	out	0x2e, r24	; 46
 a64:	9b c0       	rjmp	.+310    	; 0xb9c <TIMER1_init+0x1d8>
 a66:	8f b5       	in	r24, 0x2f	; 47
 a68:	8e 7f       	andi	r24, 0xFE	; 254
 a6a:	8f bd       	out	0x2f, r24	; 47
 a6c:	8f b5       	in	r24, 0x2f	; 47
 a6e:	8d 7f       	andi	r24, 0xFD	; 253
 a70:	8f bd       	out	0x2f, r24	; 47
 a72:	8e b5       	in	r24, 0x2e	; 46
 a74:	88 60       	ori	r24, 0x08	; 8
 a76:	8e bd       	out	0x2e, r24	; 46
 a78:	8e b5       	in	r24, 0x2e	; 46
 a7a:	8f 7e       	andi	r24, 0xEF	; 239
 a7c:	8e bd       	out	0x2e, r24	; 46
 a7e:	8e c0       	rjmp	.+284    	; 0xb9c <TIMER1_init+0x1d8>
 a80:	8f b5       	in	r24, 0x2f	; 47
 a82:	81 60       	ori	r24, 0x01	; 1
 a84:	8f bd       	out	0x2f, r24	; 47
 a86:	8f b5       	in	r24, 0x2f	; 47
 a88:	8d 7f       	andi	r24, 0xFD	; 253
 a8a:	8f bd       	out	0x2f, r24	; 47
 a8c:	8e b5       	in	r24, 0x2e	; 46
 a8e:	88 60       	ori	r24, 0x08	; 8
 a90:	8e bd       	out	0x2e, r24	; 46
 a92:	8e b5       	in	r24, 0x2e	; 46
 a94:	8f 7e       	andi	r24, 0xEF	; 239
 a96:	8e bd       	out	0x2e, r24	; 46
 a98:	81 c0       	rjmp	.+258    	; 0xb9c <TIMER1_init+0x1d8>
 a9a:	8f b5       	in	r24, 0x2f	; 47
 a9c:	8e 7f       	andi	r24, 0xFE	; 254
 a9e:	8f bd       	out	0x2f, r24	; 47
 aa0:	8f b5       	in	r24, 0x2f	; 47
 aa2:	82 60       	ori	r24, 0x02	; 2
 aa4:	8f bd       	out	0x2f, r24	; 47
 aa6:	8e b5       	in	r24, 0x2e	; 46
 aa8:	88 60       	ori	r24, 0x08	; 8
 aaa:	8e bd       	out	0x2e, r24	; 46
 aac:	8e b5       	in	r24, 0x2e	; 46
 aae:	8f 7e       	andi	r24, 0xEF	; 239
 ab0:	8e bd       	out	0x2e, r24	; 46
 ab2:	74 c0       	rjmp	.+232    	; 0xb9c <TIMER1_init+0x1d8>
 ab4:	8f b5       	in	r24, 0x2f	; 47
 ab6:	81 60       	ori	r24, 0x01	; 1
 ab8:	8f bd       	out	0x2f, r24	; 47
 aba:	8f b5       	in	r24, 0x2f	; 47
 abc:	82 60       	ori	r24, 0x02	; 2
 abe:	8f bd       	out	0x2f, r24	; 47
 ac0:	8e b5       	in	r24, 0x2e	; 46
 ac2:	88 60       	ori	r24, 0x08	; 8
 ac4:	8e bd       	out	0x2e, r24	; 46
 ac6:	8e b5       	in	r24, 0x2e	; 46
 ac8:	8f 7e       	andi	r24, 0xEF	; 239
 aca:	8e bd       	out	0x2e, r24	; 46
 acc:	67 c0       	rjmp	.+206    	; 0xb9c <TIMER1_init+0x1d8>
 ace:	8f b5       	in	r24, 0x2f	; 47
 ad0:	8e 7f       	andi	r24, 0xFE	; 254
 ad2:	8f bd       	out	0x2f, r24	; 47
 ad4:	8f b5       	in	r24, 0x2f	; 47
 ad6:	8d 7f       	andi	r24, 0xFD	; 253
 ad8:	8f bd       	out	0x2f, r24	; 47
 ada:	8e b5       	in	r24, 0x2e	; 46
 adc:	87 7f       	andi	r24, 0xF7	; 247
 ade:	8e bd       	out	0x2e, r24	; 46
 ae0:	8e b5       	in	r24, 0x2e	; 46
 ae2:	80 61       	ori	r24, 0x10	; 16
 ae4:	8e bd       	out	0x2e, r24	; 46
 ae6:	5a c0       	rjmp	.+180    	; 0xb9c <TIMER1_init+0x1d8>
 ae8:	8f b5       	in	r24, 0x2f	; 47
 aea:	81 60       	ori	r24, 0x01	; 1
 aec:	8f bd       	out	0x2f, r24	; 47
 aee:	8f b5       	in	r24, 0x2f	; 47
 af0:	8d 7f       	andi	r24, 0xFD	; 253
 af2:	8f bd       	out	0x2f, r24	; 47
 af4:	8e b5       	in	r24, 0x2e	; 46
 af6:	87 7f       	andi	r24, 0xF7	; 247
 af8:	8e bd       	out	0x2e, r24	; 46
 afa:	8e b5       	in	r24, 0x2e	; 46
 afc:	80 61       	ori	r24, 0x10	; 16
 afe:	8e bd       	out	0x2e, r24	; 46
 b00:	4d c0       	rjmp	.+154    	; 0xb9c <TIMER1_init+0x1d8>
 b02:	8f b5       	in	r24, 0x2f	; 47
 b04:	8e 7f       	andi	r24, 0xFE	; 254
 b06:	8f bd       	out	0x2f, r24	; 47
 b08:	8f b5       	in	r24, 0x2f	; 47
 b0a:	82 60       	ori	r24, 0x02	; 2
 b0c:	8f bd       	out	0x2f, r24	; 47
 b0e:	8e b5       	in	r24, 0x2e	; 46
 b10:	87 7f       	andi	r24, 0xF7	; 247
 b12:	8e bd       	out	0x2e, r24	; 46
 b14:	8e b5       	in	r24, 0x2e	; 46
 b16:	80 61       	ori	r24, 0x10	; 16
 b18:	8e bd       	out	0x2e, r24	; 46
 b1a:	40 c0       	rjmp	.+128    	; 0xb9c <TIMER1_init+0x1d8>
 b1c:	8f b5       	in	r24, 0x2f	; 47
 b1e:	81 60       	ori	r24, 0x01	; 1
 b20:	8f bd       	out	0x2f, r24	; 47
 b22:	8f b5       	in	r24, 0x2f	; 47
 b24:	82 60       	ori	r24, 0x02	; 2
 b26:	8f bd       	out	0x2f, r24	; 47
 b28:	8e b5       	in	r24, 0x2e	; 46
 b2a:	87 7f       	andi	r24, 0xF7	; 247
 b2c:	8e bd       	out	0x2e, r24	; 46
 b2e:	8e b5       	in	r24, 0x2e	; 46
 b30:	80 61       	ori	r24, 0x10	; 16
 b32:	8e bd       	out	0x2e, r24	; 46
 b34:	33 c0       	rjmp	.+102    	; 0xb9c <TIMER1_init+0x1d8>
 b36:	8f b5       	in	r24, 0x2f	; 47
 b38:	8e 7f       	andi	r24, 0xFE	; 254
 b3a:	8f bd       	out	0x2f, r24	; 47
 b3c:	8f b5       	in	r24, 0x2f	; 47
 b3e:	8d 7f       	andi	r24, 0xFD	; 253
 b40:	8f bd       	out	0x2f, r24	; 47
 b42:	8e b5       	in	r24, 0x2e	; 46
 b44:	88 60       	ori	r24, 0x08	; 8
 b46:	8e bd       	out	0x2e, r24	; 46
 b48:	8e b5       	in	r24, 0x2e	; 46
 b4a:	80 61       	ori	r24, 0x10	; 16
 b4c:	8e bd       	out	0x2e, r24	; 46
 b4e:	26 c0       	rjmp	.+76     	; 0xb9c <TIMER1_init+0x1d8>
 b50:	8f b5       	in	r24, 0x2f	; 47
 b52:	8e 7f       	andi	r24, 0xFE	; 254
 b54:	8f bd       	out	0x2f, r24	; 47
 b56:	8f b5       	in	r24, 0x2f	; 47
 b58:	82 60       	ori	r24, 0x02	; 2
 b5a:	8f bd       	out	0x2f, r24	; 47
 b5c:	8e b5       	in	r24, 0x2e	; 46
 b5e:	88 60       	ori	r24, 0x08	; 8
 b60:	8e bd       	out	0x2e, r24	; 46
 b62:	8e b5       	in	r24, 0x2e	; 46
 b64:	80 61       	ori	r24, 0x10	; 16
 b66:	8e bd       	out	0x2e, r24	; 46
 b68:	19 c0       	rjmp	.+50     	; 0xb9c <TIMER1_init+0x1d8>
 b6a:	8f b5       	in	r24, 0x2f	; 47
 b6c:	81 60       	ori	r24, 0x01	; 1
 b6e:	8f bd       	out	0x2f, r24	; 47
 b70:	8f b5       	in	r24, 0x2f	; 47
 b72:	82 60       	ori	r24, 0x02	; 2
 b74:	8f bd       	out	0x2f, r24	; 47
 b76:	8e b5       	in	r24, 0x2e	; 46
 b78:	88 60       	ori	r24, 0x08	; 8
 b7a:	8e bd       	out	0x2e, r24	; 46
 b7c:	8e b5       	in	r24, 0x2e	; 46
 b7e:	80 61       	ori	r24, 0x10	; 16
 b80:	8e bd       	out	0x2e, r24	; 46
 b82:	0c c0       	rjmp	.+24     	; 0xb9c <TIMER1_init+0x1d8>
 b84:	8f b5       	in	r24, 0x2f	; 47
 b86:	8e 7f       	andi	r24, 0xFE	; 254
 b88:	8f bd       	out	0x2f, r24	; 47
 b8a:	8f b5       	in	r24, 0x2f	; 47
 b8c:	8d 7f       	andi	r24, 0xFD	; 253
 b8e:	8f bd       	out	0x2f, r24	; 47
 b90:	8e b5       	in	r24, 0x2e	; 46
 b92:	87 7f       	andi	r24, 0xF7	; 247
 b94:	8e bd       	out	0x2e, r24	; 46
 b96:	8e b5       	in	r24, 0x2e	; 46
 b98:	8f 7e       	andi	r24, 0xEF	; 239
 b9a:	8e bd       	out	0x2e, r24	; 46
 b9c:	8a 81       	ldd	r24, Y+2	; 0x02
 b9e:	82 30       	cpi	r24, 0x02	; 2
 ba0:	c9 f0       	breq	.+50     	; 0xbd4 <TIMER1_init+0x210>
 ba2:	28 f4       	brcc	.+10     	; 0xbae <TIMER1_init+0x1ea>
 ba4:	88 23       	and	r24, r24
 ba6:	41 f0       	breq	.+16     	; 0xbb8 <TIMER1_init+0x1f4>
 ba8:	81 30       	cpi	r24, 0x01	; 1
 baa:	69 f0       	breq	.+26     	; 0xbc6 <TIMER1_init+0x202>
 bac:	21 c0       	rjmp	.+66     	; 0xbf0 <TIMER1_init+0x22c>
 bae:	85 30       	cpi	r24, 0x05	; 5
 bb0:	c0 f0       	brcs	.+48     	; 0xbe2 <TIMER1_init+0x21e>
 bb2:	85 30       	cpi	r24, 0x05	; 5
 bb4:	79 f0       	breq	.+30     	; 0xbd4 <TIMER1_init+0x210>
 bb6:	1c c0       	rjmp	.+56     	; 0xbf0 <TIMER1_init+0x22c>
 bb8:	8f b5       	in	r24, 0x2f	; 47
 bba:	8f 7b       	andi	r24, 0xBF	; 191
 bbc:	8f bd       	out	0x2f, r24	; 47
 bbe:	8f b5       	in	r24, 0x2f	; 47
 bc0:	8f 77       	andi	r24, 0x7F	; 127
 bc2:	8f bd       	out	0x2f, r24	; 47
 bc4:	1b c0       	rjmp	.+54     	; 0xbfc <TIMER1_init+0x238>
 bc6:	8f b5       	in	r24, 0x2f	; 47
 bc8:	80 64       	ori	r24, 0x40	; 64
 bca:	8f bd       	out	0x2f, r24	; 47
 bcc:	8f b5       	in	r24, 0x2f	; 47
 bce:	8f 77       	andi	r24, 0x7F	; 127
 bd0:	8f bd       	out	0x2f, r24	; 47
 bd2:	14 c0       	rjmp	.+40     	; 0xbfc <TIMER1_init+0x238>
 bd4:	8f b5       	in	r24, 0x2f	; 47
 bd6:	8f 7b       	andi	r24, 0xBF	; 191
 bd8:	8f bd       	out	0x2f, r24	; 47
 bda:	8f b5       	in	r24, 0x2f	; 47
 bdc:	80 68       	ori	r24, 0x80	; 128
 bde:	8f bd       	out	0x2f, r24	; 47
 be0:	0d c0       	rjmp	.+26     	; 0xbfc <TIMER1_init+0x238>
 be2:	8f b5       	in	r24, 0x2f	; 47
 be4:	80 64       	ori	r24, 0x40	; 64
 be6:	8f bd       	out	0x2f, r24	; 47
 be8:	8f b5       	in	r24, 0x2f	; 47
 bea:	80 68       	ori	r24, 0x80	; 128
 bec:	8f bd       	out	0x2f, r24	; 47
 bee:	06 c0       	rjmp	.+12     	; 0xbfc <TIMER1_init+0x238>
 bf0:	8f b5       	in	r24, 0x2f	; 47
 bf2:	8f 7b       	andi	r24, 0xBF	; 191
 bf4:	8f bd       	out	0x2f, r24	; 47
 bf6:	8f b5       	in	r24, 0x2f	; 47
 bf8:	8f 77       	andi	r24, 0x7F	; 127
 bfa:	8f bd       	out	0x2f, r24	; 47
 bfc:	8b 81       	ldd	r24, Y+3	; 0x03
 bfe:	82 30       	cpi	r24, 0x02	; 2
 c00:	c9 f0       	breq	.+50     	; 0xc34 <TIMER1_init+0x270>
 c02:	28 f4       	brcc	.+10     	; 0xc0e <TIMER1_init+0x24a>
 c04:	88 23       	and	r24, r24
 c06:	41 f0       	breq	.+16     	; 0xc18 <TIMER1_init+0x254>
 c08:	81 30       	cpi	r24, 0x01	; 1
 c0a:	69 f0       	breq	.+26     	; 0xc26 <TIMER1_init+0x262>
 c0c:	21 c0       	rjmp	.+66     	; 0xc50 <TIMER1_init+0x28c>
 c0e:	85 30       	cpi	r24, 0x05	; 5
 c10:	c0 f0       	brcs	.+48     	; 0xc42 <TIMER1_init+0x27e>
 c12:	85 30       	cpi	r24, 0x05	; 5
 c14:	79 f0       	breq	.+30     	; 0xc34 <TIMER1_init+0x270>
 c16:	1c c0       	rjmp	.+56     	; 0xc50 <TIMER1_init+0x28c>
 c18:	8f b5       	in	r24, 0x2f	; 47
 c1a:	8f 7e       	andi	r24, 0xEF	; 239
 c1c:	8f bd       	out	0x2f, r24	; 47
 c1e:	8f b5       	in	r24, 0x2f	; 47
 c20:	8f 7d       	andi	r24, 0xDF	; 223
 c22:	8f bd       	out	0x2f, r24	; 47
 c24:	1b c0       	rjmp	.+54     	; 0xc5c <TIMER1_init+0x298>
 c26:	8f b5       	in	r24, 0x2f	; 47
 c28:	80 61       	ori	r24, 0x10	; 16
 c2a:	8f bd       	out	0x2f, r24	; 47
 c2c:	8f b5       	in	r24, 0x2f	; 47
 c2e:	8f 7d       	andi	r24, 0xDF	; 223
 c30:	8f bd       	out	0x2f, r24	; 47
 c32:	14 c0       	rjmp	.+40     	; 0xc5c <TIMER1_init+0x298>
 c34:	8f b5       	in	r24, 0x2f	; 47
 c36:	8f 7e       	andi	r24, 0xEF	; 239
 c38:	8f bd       	out	0x2f, r24	; 47
 c3a:	8f b5       	in	r24, 0x2f	; 47
 c3c:	80 62       	ori	r24, 0x20	; 32
 c3e:	8f bd       	out	0x2f, r24	; 47
 c40:	0d c0       	rjmp	.+26     	; 0xc5c <TIMER1_init+0x298>
 c42:	8f b5       	in	r24, 0x2f	; 47
 c44:	80 61       	ori	r24, 0x10	; 16
 c46:	8f bd       	out	0x2f, r24	; 47
 c48:	8f b5       	in	r24, 0x2f	; 47
 c4a:	80 62       	ori	r24, 0x20	; 32
 c4c:	8f bd       	out	0x2f, r24	; 47
 c4e:	06 c0       	rjmp	.+12     	; 0xc5c <TIMER1_init+0x298>
 c50:	8f b5       	in	r24, 0x2f	; 47
 c52:	8f 7e       	andi	r24, 0xEF	; 239
 c54:	8f bd       	out	0x2f, r24	; 47
 c56:	8f b5       	in	r24, 0x2f	; 47
 c58:	8f 7d       	andi	r24, 0xDF	; 223
 c5a:	8f bd       	out	0x2f, r24	; 47
 c5c:	8e b5       	in	r24, 0x2e	; 46
 c5e:	88 7d       	andi	r24, 0xD8	; 216
 c60:	8e bd       	out	0x2e, r24	; 46
 c62:	9e b5       	in	r25, 0x2e	; 46
 c64:	8c 81       	ldd	r24, Y+4	; 0x04
 c66:	89 2b       	or	r24, r25
 c68:	8e bd       	out	0x2e, r24	; 46
 c6a:	8d 81       	ldd	r24, Y+5	; 0x05
 c6c:	88 23       	and	r24, r24
 c6e:	21 f0       	breq	.+8      	; 0xc78 <TIMER1_init+0x2b4>
 c70:	89 b7       	in	r24, 0x39	; 57
 c72:	84 60       	ori	r24, 0x04	; 4
 c74:	89 bf       	out	0x39, r24	; 57
 c76:	03 c0       	rjmp	.+6      	; 0xc7e <TIMER1_init+0x2ba>
 c78:	89 b7       	in	r24, 0x39	; 57
 c7a:	8b 7f       	andi	r24, 0xFB	; 251
 c7c:	89 bf       	out	0x39, r24	; 57
 c7e:	8e 81       	ldd	r24, Y+6	; 0x06
 c80:	88 23       	and	r24, r24
 c82:	21 f0       	breq	.+8      	; 0xc8c <TIMER1_init+0x2c8>
 c84:	89 b7       	in	r24, 0x39	; 57
 c86:	80 61       	ori	r24, 0x10	; 16
 c88:	89 bf       	out	0x39, r24	; 57
 c8a:	03 c0       	rjmp	.+6      	; 0xc92 <TIMER1_init+0x2ce>
 c8c:	89 b7       	in	r24, 0x39	; 57
 c8e:	8f 7e       	andi	r24, 0xEF	; 239
 c90:	89 bf       	out	0x39, r24	; 57
 c92:	8f 81       	ldd	r24, Y+7	; 0x07
 c94:	88 23       	and	r24, r24
 c96:	21 f0       	breq	.+8      	; 0xca0 <TIMER1_init+0x2dc>
 c98:	89 b7       	in	r24, 0x39	; 57
 c9a:	88 60       	ori	r24, 0x08	; 8
 c9c:	89 bf       	out	0x39, r24	; 57
 c9e:	03 c0       	rjmp	.+6      	; 0xca6 <TIMER1_init+0x2e2>
 ca0:	89 b7       	in	r24, 0x39	; 57
 ca2:	87 7f       	andi	r24, 0xF7	; 247
 ca4:	89 bf       	out	0x39, r24	; 57
 ca6:	88 85       	ldd	r24, Y+8	; 0x08
 ca8:	88 23       	and	r24, r24
 caa:	21 f0       	breq	.+8      	; 0xcb4 <TIMER1_init+0x2f0>
 cac:	89 b7       	in	r24, 0x39	; 57
 cae:	80 62       	ori	r24, 0x20	; 32
 cb0:	89 bf       	out	0x39, r24	; 57
 cb2:	03 c0       	rjmp	.+6      	; 0xcba <TIMER1_init+0x2f6>
 cb4:	89 b7       	in	r24, 0x39	; 57
 cb6:	8f 7d       	andi	r24, 0xDF	; 223
 cb8:	89 bf       	out	0x39, r24	; 57
 cba:	28 96       	adiw	r28, 0x08	; 8
 cbc:	0f b6       	in	r0, 0x3f	; 63
 cbe:	f8 94       	cli
 cc0:	de bf       	out	0x3e, r29	; 62
 cc2:	0f be       	out	0x3f, r0	; 63
 cc4:	cd bf       	out	0x3d, r28	; 61
 cc6:	df 91       	pop	r29
 cc8:	cf 91       	pop	r28
 cca:	08 95       	ret

00000ccc <__vector_11>:
 ccc:	1f 92       	push	r1
 cce:	0f 92       	push	r0
 cd0:	0f b6       	in	r0, 0x3f	; 63
 cd2:	0f 92       	push	r0
 cd4:	11 24       	eor	r1, r1
 cd6:	2f 93       	push	r18
 cd8:	3f 93       	push	r19
 cda:	4f 93       	push	r20
 cdc:	5f 93       	push	r21
 cde:	6f 93       	push	r22
 ce0:	7f 93       	push	r23
 ce2:	8f 93       	push	r24
 ce4:	9f 93       	push	r25
 ce6:	af 93       	push	r26
 ce8:	bf 93       	push	r27
 cea:	ef 93       	push	r30
 cec:	ff 93       	push	r31
 cee:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <TIMER0_OVERFLOW_PTR>
 cf2:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <TIMER0_OVERFLOW_PTR+0x1>
 cf6:	30 97       	sbiw	r30, 0x00	; 0
 cf8:	09 f0       	breq	.+2      	; 0xcfc <__vector_11+0x30>
 cfa:	09 95       	icall
 cfc:	ff 91       	pop	r31
 cfe:	ef 91       	pop	r30
 d00:	bf 91       	pop	r27
 d02:	af 91       	pop	r26
 d04:	9f 91       	pop	r25
 d06:	8f 91       	pop	r24
 d08:	7f 91       	pop	r23
 d0a:	6f 91       	pop	r22
 d0c:	5f 91       	pop	r21
 d0e:	4f 91       	pop	r20
 d10:	3f 91       	pop	r19
 d12:	2f 91       	pop	r18
 d14:	0f 90       	pop	r0
 d16:	0f be       	out	0x3f, r0	; 63
 d18:	0f 90       	pop	r0
 d1a:	1f 90       	pop	r1
 d1c:	18 95       	reti

00000d1e <__vector_10>:
 d1e:	1f 92       	push	r1
 d20:	0f 92       	push	r0
 d22:	0f b6       	in	r0, 0x3f	; 63
 d24:	0f 92       	push	r0
 d26:	11 24       	eor	r1, r1
 d28:	2f 93       	push	r18
 d2a:	3f 93       	push	r19
 d2c:	4f 93       	push	r20
 d2e:	5f 93       	push	r21
 d30:	6f 93       	push	r22
 d32:	7f 93       	push	r23
 d34:	8f 93       	push	r24
 d36:	9f 93       	push	r25
 d38:	af 93       	push	r26
 d3a:	bf 93       	push	r27
 d3c:	ef 93       	push	r30
 d3e:	ff 93       	push	r31
 d40:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <TIMER0_ON_COMP_PTR>
 d44:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <TIMER0_ON_COMP_PTR+0x1>
 d48:	30 97       	sbiw	r30, 0x00	; 0
 d4a:	09 f0       	breq	.+2      	; 0xd4e <__vector_10+0x30>
 d4c:	09 95       	icall
 d4e:	ff 91       	pop	r31
 d50:	ef 91       	pop	r30
 d52:	bf 91       	pop	r27
 d54:	af 91       	pop	r26
 d56:	9f 91       	pop	r25
 d58:	8f 91       	pop	r24
 d5a:	7f 91       	pop	r23
 d5c:	6f 91       	pop	r22
 d5e:	5f 91       	pop	r21
 d60:	4f 91       	pop	r20
 d62:	3f 91       	pop	r19
 d64:	2f 91       	pop	r18
 d66:	0f 90       	pop	r0
 d68:	0f be       	out	0x3f, r0	; 63
 d6a:	0f 90       	pop	r0
 d6c:	1f 90       	pop	r1
 d6e:	18 95       	reti

00000d70 <__vector_9>:
 d70:	1f 92       	push	r1
 d72:	0f 92       	push	r0
 d74:	0f b6       	in	r0, 0x3f	; 63
 d76:	0f 92       	push	r0
 d78:	11 24       	eor	r1, r1
 d7a:	2f 93       	push	r18
 d7c:	3f 93       	push	r19
 d7e:	4f 93       	push	r20
 d80:	5f 93       	push	r21
 d82:	6f 93       	push	r22
 d84:	7f 93       	push	r23
 d86:	8f 93       	push	r24
 d88:	9f 93       	push	r25
 d8a:	af 93       	push	r26
 d8c:	bf 93       	push	r27
 d8e:	ef 93       	push	r30
 d90:	ff 93       	push	r31
 d92:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <TIMER1_OVERFLOW_PTR>
 d96:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <TIMER1_OVERFLOW_PTR+0x1>
 d9a:	30 97       	sbiw	r30, 0x00	; 0
 d9c:	09 f0       	breq	.+2      	; 0xda0 <__vector_9+0x30>
 d9e:	09 95       	icall
 da0:	ff 91       	pop	r31
 da2:	ef 91       	pop	r30
 da4:	bf 91       	pop	r27
 da6:	af 91       	pop	r26
 da8:	9f 91       	pop	r25
 daa:	8f 91       	pop	r24
 dac:	7f 91       	pop	r23
 dae:	6f 91       	pop	r22
 db0:	5f 91       	pop	r21
 db2:	4f 91       	pop	r20
 db4:	3f 91       	pop	r19
 db6:	2f 91       	pop	r18
 db8:	0f 90       	pop	r0
 dba:	0f be       	out	0x3f, r0	; 63
 dbc:	0f 90       	pop	r0
 dbe:	1f 90       	pop	r1
 dc0:	18 95       	reti

00000dc2 <__vector_7>:
 dc2:	1f 92       	push	r1
 dc4:	0f 92       	push	r0
 dc6:	0f b6       	in	r0, 0x3f	; 63
 dc8:	0f 92       	push	r0
 dca:	11 24       	eor	r1, r1
 dcc:	2f 93       	push	r18
 dce:	3f 93       	push	r19
 dd0:	4f 93       	push	r20
 dd2:	5f 93       	push	r21
 dd4:	6f 93       	push	r22
 dd6:	7f 93       	push	r23
 dd8:	8f 93       	push	r24
 dda:	9f 93       	push	r25
 ddc:	af 93       	push	r26
 dde:	bf 93       	push	r27
 de0:	ef 93       	push	r30
 de2:	ff 93       	push	r31
 de4:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <TIMER1_ON_COMP_A_PTR>
 de8:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <TIMER1_ON_COMP_A_PTR+0x1>
 dec:	30 97       	sbiw	r30, 0x00	; 0
 dee:	09 f0       	breq	.+2      	; 0xdf2 <__vector_7+0x30>
 df0:	09 95       	icall
 df2:	ff 91       	pop	r31
 df4:	ef 91       	pop	r30
 df6:	bf 91       	pop	r27
 df8:	af 91       	pop	r26
 dfa:	9f 91       	pop	r25
 dfc:	8f 91       	pop	r24
 dfe:	7f 91       	pop	r23
 e00:	6f 91       	pop	r22
 e02:	5f 91       	pop	r21
 e04:	4f 91       	pop	r20
 e06:	3f 91       	pop	r19
 e08:	2f 91       	pop	r18
 e0a:	0f 90       	pop	r0
 e0c:	0f be       	out	0x3f, r0	; 63
 e0e:	0f 90       	pop	r0
 e10:	1f 90       	pop	r1
 e12:	18 95       	reti

00000e14 <__vector_8>:
 e14:	1f 92       	push	r1
 e16:	0f 92       	push	r0
 e18:	0f b6       	in	r0, 0x3f	; 63
 e1a:	0f 92       	push	r0
 e1c:	11 24       	eor	r1, r1
 e1e:	2f 93       	push	r18
 e20:	3f 93       	push	r19
 e22:	4f 93       	push	r20
 e24:	5f 93       	push	r21
 e26:	6f 93       	push	r22
 e28:	7f 93       	push	r23
 e2a:	8f 93       	push	r24
 e2c:	9f 93       	push	r25
 e2e:	af 93       	push	r26
 e30:	bf 93       	push	r27
 e32:	ef 93       	push	r30
 e34:	ff 93       	push	r31
 e36:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <TIMER1_ON_COMP_B_PTR>
 e3a:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <TIMER1_ON_COMP_B_PTR+0x1>
 e3e:	30 97       	sbiw	r30, 0x00	; 0
 e40:	09 f0       	breq	.+2      	; 0xe44 <__vector_8+0x30>
 e42:	09 95       	icall
 e44:	ff 91       	pop	r31
 e46:	ef 91       	pop	r30
 e48:	bf 91       	pop	r27
 e4a:	af 91       	pop	r26
 e4c:	9f 91       	pop	r25
 e4e:	8f 91       	pop	r24
 e50:	7f 91       	pop	r23
 e52:	6f 91       	pop	r22
 e54:	5f 91       	pop	r21
 e56:	4f 91       	pop	r20
 e58:	3f 91       	pop	r19
 e5a:	2f 91       	pop	r18
 e5c:	0f 90       	pop	r0
 e5e:	0f be       	out	0x3f, r0	; 63
 e60:	0f 90       	pop	r0
 e62:	1f 90       	pop	r1
 e64:	18 95       	reti

00000e66 <__vector_6>:
 e66:	1f 92       	push	r1
 e68:	0f 92       	push	r0
 e6a:	0f b6       	in	r0, 0x3f	; 63
 e6c:	0f 92       	push	r0
 e6e:	11 24       	eor	r1, r1
 e70:	2f 93       	push	r18
 e72:	3f 93       	push	r19
 e74:	4f 93       	push	r20
 e76:	5f 93       	push	r21
 e78:	6f 93       	push	r22
 e7a:	7f 93       	push	r23
 e7c:	8f 93       	push	r24
 e7e:	9f 93       	push	r25
 e80:	af 93       	push	r26
 e82:	bf 93       	push	r27
 e84:	ef 93       	push	r30
 e86:	ff 93       	push	r31
 e88:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <TIMER1_CAPT_PTR>
 e8c:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <TIMER1_CAPT_PTR+0x1>
 e90:	30 97       	sbiw	r30, 0x00	; 0
 e92:	09 f0       	breq	.+2      	; 0xe96 <__vector_6+0x30>
 e94:	09 95       	icall
 e96:	ff 91       	pop	r31
 e98:	ef 91       	pop	r30
 e9a:	bf 91       	pop	r27
 e9c:	af 91       	pop	r26
 e9e:	9f 91       	pop	r25
 ea0:	8f 91       	pop	r24
 ea2:	7f 91       	pop	r23
 ea4:	6f 91       	pop	r22
 ea6:	5f 91       	pop	r21
 ea8:	4f 91       	pop	r20
 eaa:	3f 91       	pop	r19
 eac:	2f 91       	pop	r18
 eae:	0f 90       	pop	r0
 eb0:	0f be       	out	0x3f, r0	; 63
 eb2:	0f 90       	pop	r0
 eb4:	1f 90       	pop	r1
 eb6:	18 95       	reti

00000eb8 <__vector_5>:
 eb8:	1f 92       	push	r1
 eba:	0f 92       	push	r0
 ebc:	0f b6       	in	r0, 0x3f	; 63
 ebe:	0f 92       	push	r0
 ec0:	11 24       	eor	r1, r1
 ec2:	2f 93       	push	r18
 ec4:	3f 93       	push	r19
 ec6:	4f 93       	push	r20
 ec8:	5f 93       	push	r21
 eca:	6f 93       	push	r22
 ecc:	7f 93       	push	r23
 ece:	8f 93       	push	r24
 ed0:	9f 93       	push	r25
 ed2:	af 93       	push	r26
 ed4:	bf 93       	push	r27
 ed6:	ef 93       	push	r30
 ed8:	ff 93       	push	r31
 eda:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <TIMER2_OVERFLOW_PTR>
 ede:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <TIMER2_OVERFLOW_PTR+0x1>
 ee2:	30 97       	sbiw	r30, 0x00	; 0
 ee4:	09 f0       	breq	.+2      	; 0xee8 <__vector_5+0x30>
 ee6:	09 95       	icall
 ee8:	ff 91       	pop	r31
 eea:	ef 91       	pop	r30
 eec:	bf 91       	pop	r27
 eee:	af 91       	pop	r26
 ef0:	9f 91       	pop	r25
 ef2:	8f 91       	pop	r24
 ef4:	7f 91       	pop	r23
 ef6:	6f 91       	pop	r22
 ef8:	5f 91       	pop	r21
 efa:	4f 91       	pop	r20
 efc:	3f 91       	pop	r19
 efe:	2f 91       	pop	r18
 f00:	0f 90       	pop	r0
 f02:	0f be       	out	0x3f, r0	; 63
 f04:	0f 90       	pop	r0
 f06:	1f 90       	pop	r1
 f08:	18 95       	reti

00000f0a <__vector_4>:
 f0a:	1f 92       	push	r1
 f0c:	0f 92       	push	r0
 f0e:	0f b6       	in	r0, 0x3f	; 63
 f10:	0f 92       	push	r0
 f12:	11 24       	eor	r1, r1
 f14:	2f 93       	push	r18
 f16:	3f 93       	push	r19
 f18:	4f 93       	push	r20
 f1a:	5f 93       	push	r21
 f1c:	6f 93       	push	r22
 f1e:	7f 93       	push	r23
 f20:	8f 93       	push	r24
 f22:	9f 93       	push	r25
 f24:	af 93       	push	r26
 f26:	bf 93       	push	r27
 f28:	ef 93       	push	r30
 f2a:	ff 93       	push	r31
 f2c:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <_edata>
 f30:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <_edata+0x1>
 f34:	30 97       	sbiw	r30, 0x00	; 0
 f36:	09 f0       	breq	.+2      	; 0xf3a <__vector_4+0x30>
 f38:	09 95       	icall
 f3a:	ff 91       	pop	r31
 f3c:	ef 91       	pop	r30
 f3e:	bf 91       	pop	r27
 f40:	af 91       	pop	r26
 f42:	9f 91       	pop	r25
 f44:	8f 91       	pop	r24
 f46:	7f 91       	pop	r23
 f48:	6f 91       	pop	r22
 f4a:	5f 91       	pop	r21
 f4c:	4f 91       	pop	r20
 f4e:	3f 91       	pop	r19
 f50:	2f 91       	pop	r18
 f52:	0f 90       	pop	r0
 f54:	0f be       	out	0x3f, r0	; 63
 f56:	0f 90       	pop	r0
 f58:	1f 90       	pop	r1
 f5a:	18 95       	reti

00000f5c <__tablejump2__>:
 f5c:	ee 0f       	add	r30, r30
 f5e:	ff 1f       	adc	r31, r31
 f60:	05 90       	lpm	r0, Z+
 f62:	f4 91       	lpm	r31, Z
 f64:	e0 2d       	mov	r30, r0
 f66:	09 94       	ijmp

00000f68 <__umulhisi3>:
 f68:	a2 9f       	mul	r26, r18
 f6a:	b0 01       	movw	r22, r0
 f6c:	b3 9f       	mul	r27, r19
 f6e:	c0 01       	movw	r24, r0
 f70:	a3 9f       	mul	r26, r19
 f72:	70 0d       	add	r23, r0
 f74:	81 1d       	adc	r24, r1
 f76:	11 24       	eor	r1, r1
 f78:	91 1d       	adc	r25, r1
 f7a:	b2 9f       	mul	r27, r18
 f7c:	70 0d       	add	r23, r0
 f7e:	81 1d       	adc	r24, r1
 f80:	11 24       	eor	r1, r1
 f82:	91 1d       	adc	r25, r1
 f84:	08 95       	ret

00000f86 <_exit>:
 f86:	f8 94       	cli

00000f88 <__stop_program>:
 f88:	ff cf       	rjmp	.-2      	; 0xf88 <__stop_program>
